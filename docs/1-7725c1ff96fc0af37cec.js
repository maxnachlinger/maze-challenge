(window.webpackJsonp=window.webpackJsonp||[]).push([[1],[,function(y,x,n){"use strict";n.r(x),n.d(x,"startUp",(function(){return S}));var e=n(5),t=n(2),a=n(3),r=n.n(a),o=n(6),i={insert:"head",singleton:!1},s=(r()(o.a,i),o.a.locals,n(7)),l={insert:"head",singleton:!1};r()(s.a,l),s.a.locals,n(8);const u=new Int8Array([6,14,14,8,2,10,14,14,10,10,10,14,10,14,8,6,14,10,14,10,14,14,8,6,10,14,8,2,10,12,4,4,6,10,14,14,8,2,14,10,14,8,2,14,10,14,10,14,8,4,4,2,14,14,10,12,6,10,14,14,8,6,10,14,14,8,2,14,10,14,10,14,14,8,6,8,2,14,10,12,4,6,10,14,14,14,8,2,14,10,12,4,4,4,6,10,14,8,2,12,1,1,7,14,8,6,13,1,4,4,4,7,8,7,8,1,1,4,7,8,1,7,8,5,4,3,14,8,4,7,11,11,11,8,1,7,14,8,5,4,1,4,2,13,2,13,4,3,14,11,9,2,13,1,4,7,11,8,5,3,10,11,8,1,7,8,2,13,2,15,8,1,7,8,5,4,2,13,2,11,15,11,8,1,1,7,8,2,13,2,15,11,15,11,11,8,7,8,2,13,4,4,1,7,8,5,1,4,7,11,15,15,8,7,14,8,2,15,11,8,2,15,8,3,15,8,7,8,7,9,4,4,4,2,12,1,7,8,3,13,2,15,14,13,2,11,13,4,1,4,2,14,13,2,15,11,8,6,9,4,4,4,2,10,15,8,2,9,4,7,8,2,15,8,3,13,2,15,12,2,15,8,4,4,2,15,8,2,15,12,1,2,13,4,4,2,15,8,4,5,7,9,2,15,8,1,4,7,11,8,1,1,4,1,7,14,8,7,8,2,14,15,8,2,15,8,7,8,5,2,15,11,15,8,5,2,15,14,8,3,14,13,1,1,4,2,11,13,2,15,14,13,1,2,15,8,6,9,2,15,11,13,4,2,11,14,8,4,7,11,8,6,15,8,2,11,12,1,5,2,13,4,3,11,14,11,8,4,1,7,8,2,15,11,13,4,3,10,11,9,5,2,14,15,8,4,7,11,8,4,2,14,11,12,1,7,8,7,8,6,13,1,6,10,15,8,7,8,7,14,9,4,7,8,3,12,1,7,8,6,13,1,6,10,15,12,2,15,14,13,1,1,4,2,15,8,1,2,14,13,2,11,13,4,4,3,10,15,15,8,2,13,1,4,4,2,13,2,13,2,11,13,4,4,1,4,2,15,14,15,8,4,1,2,11,13,4,4,4,4,7,14,13,1,6,11,15,8,4,3,14,13,2,13,2,15,14,15,8,5,1,2,13,2,15,8,7,8,1,1,4,7,11,8,2,15,14,15,8,1,7,14,11,8,1,7,12,1,1,1,6,10,13,2,15,8,2,14,13,1,4,2,15,11,13,4,4,1,1,4,2,15,14,15,15,8,5,2,15,8,2,11,11,13,2,15,14,13,1,1,2,11,10,12,2,11,11,11,11,13,5,1,1,6,11,8,1,4,5,2,13,1,2,11,12,1,1,1,6,15,8,6,9,4,7,8,7,14,8,2,15,11,8,6,14,13,1,1,4,4,1,1,4,4,4,1,7,10,10,10,11,8,1,2,13,4,2,13,1,6,11,12,1,2,15,11,13,4,2,15,10,9,1,1,7,8,5,2,15,14,8,4,4,5,2,13,1,1,4,4,4,4,4,7,8,4,4,4,2,13,7,14,14,15,8,4,6,11,9,2,15,8,4,2,11,10,12,2,13,1,2,9,2,15,11,8,1,7,14,8,5,4,4,1,5,1,4,6,11,15,8,2,15,11,15,8,1,4,4,4,4,4,4,4,3,11,14,15,8,1,4,7,10,12,1,2,11,13,4,1,4,4,4,2,11,10,15,8,1,5,2,15,11,13,2,15,8,6,11,15,15,15,15,9,2,15,11,15,8,5,1,1,1,1,4,7,11,8,2,14,15,10,9,4,4,4,5,2,15,14,8,4,4,7,8,4,4,1,7,8,7,11,15,8,3,14,15,15,8,7,8,2,15,8,7,8,4,7,11,15,15,15,15,15,8,2,13,1,6,10,15,11,8,7,8,4,2,11,13,2,15,11,13,4,4,4,3,8,2,13,2,13,4,1,2,15,14,15,8,1,1,1,7,8,2,13,4,3,10,9,2,14,10,14,11,11,8,4,2,13,3,8,2,15,11,15,15,12,1,7,14,15,15,15,8,3,15,14,15,8,5,2,13,4,4,1,1,1,2,15,8,4,7,8,7,14,15,15,8,1,1,1,1,7,14,8,7,8,5,2,15,8,2,15,8,7,8,2,15,14,13,2,15,15,11,13,4,2,14,13,2,11,13,6,8,1,1,1,6,14,14,14,15,8,2,11,13,4,4,4,6,13,2,15,8,4,2,15,14,15,8,4,4,7,8,1,1,7,12,1,1,1,1,1,4,2,13,1,1,6,13,2,15,11,13,4,4,4,2,11,14,15,15,8,1,1,1,1,6,10,14,10,8,1,7,8,7,8,1,4,7,8,6,15,8,5,4,4,1,1,1,4,1,1,2,15,15,14,13,1,4,2,11,13,6,8,2,14,13,1,1,1,1,6,8,2,15,11,11,13,5,1,2,13,2,15,14,13,1,1,2,15,11,15,8,2,12,1,7,14,14,14,8,2,13,2,15,14,8,1,7,8,1,2,15,15,11,13,4,4,1,1,1,6,10,14,8,6,11,12,1,4,4,2,15,8,7,8,2,15,11,8,5,1,2,15,15,15,10,14,8,3,14,10,12,1,1,1,1,4,5,4,2,11,13,4,2,13,1,6,10,10,10,15,8,4,1,4,4,5,7,12,2,13,2,13,1,1,6,8,2,15,8,1,2,10,13,4,1,1,1,7,8,2,15,8,1,7,14,8,3,14,10,8,1,1,6,15,11,15,8,6,10,11,8,7,14,11,8,1,2,15,15,14,15,8,7,8,2,15,8,2,15,8,2,13,1,1,2,13,2,14,13,2,13,4,4,4,4,3,15,11,12,2,15,15,14,15,8,5,4,4,4,3,14,9,4,7,11,13,1,5,2,15,14,15,8,6,11,8,2,13,4,4,4,2,15,11,12,4,2,15,8,2,15,10,12,1,7,14,8,7,8,4,4,4,1,1,2,15,8,5,4,4,2,9,7,8,4,2,14,13,1,1,1,2,15,8,2,13,4,2,15,8,2,9,4,4,4,3,14,9,1,4,7,11,15,15,15,8,5,2,11,12,1,1,1,1,4,3,15,11,15,8,5,2,15,11,8,5,6,15,8,1,1,1,2,13,4,4,2,15,15,11,13,4,1,6,11,13,2,15,8,2,15,8,7,8,1,7,8,5,2,15,11,15,8,4,2,13,4,3,11,15,8,2,13,2,15,14,13,1,4,6,8,2,15,14,8,3,13,4,3,14,8,2,15,11,15,8,1,4,4,7,11,8,1,1,7,8,3,8,2,15,10,14,14,14,15,8,1,4,7,8,5,2,13,4,2,9,5,1,2,14,10,10,10,11,11,11,12,1,1,2,11,13,4,1,2,15,14,15,8,4,7,8,7,12,2,15,8,1,4,7,8,7,14,15,8,3,15,8,2,13,4,2,9,2,13,1,1,6,11,11,14,8,1,7,8,2,11,15,8,7,8,2,15,8,7,8,4,7,11,15,8,2,12,2,15,14,8,4,2,15,8,1,1,1,7,8,2,15,11,12,1,2,11,13,4,4,7,8,6,9,4,4,4,4,4,4,5,4,4,4,2,11,15,8,6,13,1,1,4,7,11,8,1,5,2,15,8,4,7,11,8,1,1,7,8,2,13,4,4,3,13,4,4,2,15,8,2,13,4,4,3,8,2,15,14,8,4,7,8,7,14,8,7,8,3,14,15,15,8,1,4,4,5,4,1,7,14,15,8,5,4,4,2,10,15,14,8,7,8,1,4,4,4,3,11,13,7,8,5,2,15,11,15,11,11,11,15,15,15,11,8,2,15,8,5,1,4,2,11,15,8,2,14,13,2,15,14,15,15,8,4,2,14,15,8,2,11,11,13,4,3,11,13,2,15,8,2,15,11,13,4,4,4,1,7,8,7,11,8,1,7,8,5,4,4,1,1,1,6,10,11,11,11,15,8,1,1,7,8,7,11,15,8,4,1,7,10,9,4,4,7,11,15,8,2,13,7,8,1,4,7,8,1,4,4,4,1,1,1,4,4,4,7,8,3,10,15,8,4,7,8,6,13,1,4,1,1,1,1,2,13,2,13,1,2,12,4,4,3,13,4,2,11,14,15,8,6,9,2,11,11,11,11,14,15,8,7,8,4,2,15,8,7,11,13,4,2,12,5,4,4,4,4,3,14,8,2,15,8,1,4,7,8,3,14,15,8,2,15,11,11,8,7,8,4,5,7,14,8,7,9,4,4,7,11,15,8,4,2,15,11,11,9,4,4,4,3,14,15,15,8,5,1,2,15,10,12,4,4,4,5,2,15,14,8,7,11,15,8,3,15,8,6,13,1,2,9,4,4,4,4,4,2,13,1,6,11,8,3,14,15,8,1,6,11,15,8,3,15,11,11,11,13,4,3,12,2,15,8,2,15,11,8,2,13,1,4,2,13,4,4,4,3,10,15,13,1,7,8,5,2,15,11,15,8,7,14,15,8,7,8,4,2,15,11,15,8,1,1,1,2,15,8,2,13,2,11,15,11,15,9,4,1,7,8,7,8,7,8,2,13,4,1,7,14,8,2,15,11,15,15,15,8,7,14,9,4,4,4,1,7,8,4,1,4,7,8,6,9,4,4,4,3,13,4,1,2,15,8,2,13,4,4,4,3,10,9,2,15,15,11,13,4,4,1,5,6,15,10,9,4,7,8,1,4,1,1,7,8,5,2,15,14,9,2,15,8,6,10,8,2,15,8,2,11,8,4,7,8,7,10,9,2,15,14,15,8,7,14,8,3,15,8,1,7,8,4,7,8,1,1,7,8,5,1,2,15,11,15,8,3,14,15,8,7,11,8,5,2,15,11,15,8,3,13,4,2,15,8,2,11,15,11,13,4,4,4,4,1,1,2,15,11,15,8,5,5,1,4,2,15,11,8,4,5,2,14,15,8,3,10,9,1,4,4,7,8,7,8,2,14,15,8,4,4,4,7,11,8,3,8,4,4,1,1,1,4,1,7,14,8,5,4,2,15,14,15,15,8,4,2,15,8,1,4,4,7,8,7,14,8,1,7,8,7,8,2,9,4,7,8,7,14,8,3,13,2,15,8,4,4,1,6,15,15,11,11,11,10,12,4,1,2,13,4,1,7,14,9,2,15,8,6,15,15,14,13,1,4,4,4,4,4,7,11,15,8,5,2,14,13,1,4,7,11,15,15,8,4,4,2,15,11,12,4,4,7,8,1,7,8,3,15,8,1,1,1,1,6,15,14,15,8,4,7,11,15,8,1,7,8,2,11,14,15,8,4,4,7,11,8,1,7,8,4,3,14,11,10,11,15,8,1,5,1,4,4,4,4,7,11,12,2,11,13,4,5,1,4,4,7,8,5,1,1,1,1,2,11,15,11,11,11,11,8,1,4,3,14,13,1,4,7,11,8,1,1,2,15,15,14,13,2,15,15,11,13,2,14,15,8,4,7,8,6,10,12,2,13,1,1,1,4,7,11,8,1,4,2,15,14,8,4,1,1,2,15,11,15,8,4,2,15,14,15,8,1,4,4,4,3,14,8,5,2,15,11,15,15,15,8,7,12,2,11,13,5,2,15,11,15,8,7,8,6,10,14,8,4,7,8,4,4,4,2,12,5,2,13,1,6,11,15,8,4,4,2,14,13,1,1,1,4,1,1,2,13,2,13,1,6,11,11,8,5,4,1,2,15,14,8,4,7,11,8,4,4,7,8,1,7,14,15,8,4,4,7,8,1,4,5,4,1,1,7,8,4,7,11,15,8,7,8,1,2,15,8,1,1,1,4,1,7,8,2,13,1,4,7,8,1,6,15,8,7,8,7,8,7,9,2,15,11,13,4,3,13,2,15,14,11,8,1,2,15,15,14,13,1,4,4,6,11,10,8,2,15,14,15,8,5,4,4,2,11,13,6,8,1,7,14,15,15,8,6,11,15,11,10,8,1,1,7,14,15,15,15,8,6,15,11,13,4,2,15,14,15,15,8,7,8,7,14,8,2,15,8,6,10,12,3,14,9,4,4,5,4,7,11,8,6,13,1,6,11,8,7,14,15,8,2,13,2,11,13,4,3,14,9,3,8,4,2,14,13,1,1,1,2,15,11,15,8,4,4,4,1,1,1,2,15,11,13,4,4,3,13,6,8,1,1,1,1,6,9,4,7,8,4,4,4,4,1,1,1,1,1,2,13,1,2,15,11,12,1,1,1,1,6,15,8,1,7,14,8,5,4,1,2,15,14,13,2,15,11,13,7,11,8,6,13,1,4,7,8,4,1,5,1,2,14,15,8,2,11,13,4,1,4,4,2,15,14,13,1,2,12,2,14,13,2,13,2,15,15,15,10,12,4,2,13,2,15,11,15,8,3,13,2,14,10,12,2,13,2,15,9,2,15,15,15,15,14,14,10,14,8,2,15,14,12,1,2,15,10,14,8,2,13,1,4,4,1,7,8,3,15,8,6,13,1,1,2,15,8,5,5,4,2,13,1,6,11,15,8,3,14,13,2,14,13,1,4,4,2,11,13,2,15,15,14,13,1,1,4,4,3,10,9,1,2,13,2,13,1,1,2,11,13,2,15,12,1,4,7,8,2,15,14,13,2,15,14,13,2,15,8,2,13,1,1,1,1,1,2,15,10,8,1,1,7,14,12,1,2,15,8,2,15,8,3,13,2,15,14,8,5,4,1,7,10,8,4,7,8,5,3,15,8,7,8,7,8,1,6,14,9,1,2,13,1,6,11,15,8,2,15,14,13,1,1,1,6,10,15,15,8,4,4,4,4,5,2,15,14,8,4,2,13,2,13,1,4,7,11,8,6,13,1,1,4,1,1,1,2,13,4,2,15,8,6,8,4,4,4,7,8,2,14,14,13,1,1,4,4,7,8,2,15,14,8,3,12,1,7,8,3,13,4,3,8,4,7,11,8,5,4,7,8,7,14,15,8,2,13,1,4,2,14,15,8,1,2,13,6,8,1,1,1,4,4,6,11,8,1,7,14,15,15,11,11,9,4,1,7,10,9,4,5,2,13,2,15,11,8,6,13,1,6,14,11,14,10,8,2,11,11,10,11,10,13,2,15,11,15,9,2,14,13,1,1,4,4,7,11,15,14,8,1,7,14,8,5,2,15,8,4,3,13,4,2,15,11,8,2,13,7,11,8,1,1,1,4,2,13,2,15,14,13,1,4,4,2,11,13,4,6,8,2,15,11,15,8,2,12,1,1,1,7,8,4,2,15,14,9,4,4,7,9,2,13,2,15,8,2,13,1,2,13,1,2,13,4,6,8,4,4,4,4,4,1,4,7,8,1,2,14,13,1,4,2,15,11,11,8,5,1,4,4,1,7,8,3,10,11,14,15,8,3,13,2,15,8,6,14,13,7,8,6,10,12,4,5,2,13,2,13,1,1,6,11,15,8,2,11,15,9,2,14,13,2,13,4,2,11,12,2,14,9,2,15,14,13,1,2,15,11,15,8,2,13,2,15,8,2,15,14,8,3,12,2,15,11,13,2,15,11,15,15,15,8,7,11,12,2,14,13,1,4,5,2,13,4,4,2,13,2,15,15,14,15,8,4,4,4,1,7,8,4,5,2,13,4,1,5,1,5,4,1,2,11,15,9,2,13,2,15,8,2,15,8,7,14,8,2,15,8,2,13,1,2,11,15,8,2,11,14,9,4,2,13,1,1,4,2,15,8,1,2,14,9,4,7,8,4,1,7,14,8,7,12,1,4,5,2,15,8,1,1,7,10,11,8,1,2,13,1,6,11,13,2,15,11,13,4,1,2,13,1,1,1,6,11,15,15,8,7,14,15,13,2,11,13,4,3,8,3,13,4,4,2,13,2,14,9,2,15,8,4,7,8,1,7,14,8,5,4,2,15,8,4,2,13,4,4,4,1,2,15,14,15,8,6,9,2,13,4,2,14,9,2,15,11,8,7,8,1,7,8,1,1,2,15,9,4,7,8,2,10,9,4,4,4,4,2,15,8,1,4,5,4,1,2,11,13,4,2,15,14,8,2,15,8,1,7,8,1,1,1,3,12,2,11,13,4,4,2,11,11,15,8,3,14,9,2,14,15,8,7,11,8,4,1,7,8,3,13,2,15,14,9,2,15,15,11,13,4,2,13,1,1,6,11,12,2,15,11,10,9,4,4,7,8,4,7,8,2,15,14,8,4,4,5,2,15,11,8,4,4,2,15,15,11,13,2,15,8,4,7,11,15,14,8,2,15,11,12,1,7,8,2,15,8,6,15,14,8,4,4,4,3,12,2,15,11,13,4,4,4,7,8,6,13,2,14,13,1,2,15,8,4,5,2,15,14,8,3,12,1,7,8,4,1,1,2,11,11,10,15,14,14,15,8,7,8,1,4,4,4,7,11,15,8,7,11,10,12,1,7,8,7,11,9,4,7,8,2,15,15,14,13,1,2,13,2,15,14,15,15,8,1,7,8,4,1,4,5,2,15,8,2,13,4,1,1,7,14,15,15,15,8,7,8,1,4,5,7,11,15,15,8,1,1,2,13,1,4,4,7,8,7,11,12,1,7,14,8,5,2,15,8,3,12,6,8,4,4,4,1,1,1,1,6,15,8,2,15,11,11,15,8,1,4,5,4,4,1,2,15,14,11,8,4,7,9,2,14,13,1,1,1,4,2,11,12,1,1,1,1,4,2,15,10,9,2,15,9,2,15,8,2,11,15,8,4,1,1,1,1,7,8,7,8,4,7,9,7,8,5,3,8,4,4,2,15,14,15,15,15,8,5,4,3,12,1,7,8,3,14,15,8,4,7,9,2,15,11,15,8,4,4,2,13,1,4,2,13,4,4,1,4,2,15,15,11,15,8,4,1,7,8,2,15,9,4,2,13,1,2,12,6,11,8,4,7,10,14,8,2,15,14,15,8,4,4,7,8,2,15,14,8,4,7,8,7,8,2,14,14,15,8,1,4,7,11,12,7,8,1,4,2,15,11,12,1,1,1,1,1,2,11,15,8,1,2,15,8,6,13,1,6,11,11,8,2,15,8,7,14,15,15,8,3,10,9,2,15,11,13,4,3,14,13,1,4,5,2,15,14,9,4,4,5,2,15,14,15,8,4,7,9,4,4,7,11,8,3,8,2,13,1,1,2,15,11,9,4,4,1,7,14,15,15,8,7,8,2,13,1,1,6,10,15,11,8,5,5,4,2,15,14,9,4,7,10,14,8,4,4,4,2,15,8,2,14,15,8,5,1,2,13,4,4,4,2,15,8,1,1,1,7,14,8,4,4,2,13,2,11,13,4,1,5,2,15,9,2,13,1,4,7,11,9,2,13,1,1,2,15,9,4,7,11,9,4,4,4,4,2,15,8,4,2,13,4,2,15,11,12,1,1,1,1,4,5,4,2,15,8,2,13,2,13,4,2,13,7,11,10,9,1,2,15,11,8,3,10,15,15,15,8,5,2,14,13,1,2,15,8,2,15,15,11,13,2,13,4,2,10,12,1,7,14,15,15,8,7,12,2,11,13,4,1,2,13,2,14,13,2,15,11,8,2,14,15,8,2,12,5,2,15,11,8,2,15,15,11,13,2,15,14,13,2,11,13,2,13,2,15,10,14,8,2,15,15,15,14,15,8,2,13,2,11,13,4,1,1,4,4,4,4,4,7,8,4,4,4,1,1,7,8,5,2,13,1,4,2,15,14,8,1,1,4,5,2,11,13,4,2,13,4,1,1,1,7,8,1,7,12,2,11,13,4,4,3,14,13,1,2,15,8,2,14,13,1,4,4,7,9,2,13,4,2,14,13,1,2,13,4,1,1,7,8,2,13,2,15,8,1,2,15,8,2,13,1,1,1,1,4,2,15,8,2,11,15,8,4,7,11,15,11,11,9,2,15,11,15,8,2,15,14,9,2,15,8,5,4,1,7,14,8,2,15,11,12,2,11,15,8,7,11,12,4,2,15,14,8,1,7,12,2,15,11,15,8,5,1,4,2,13,4,2,13,1,2,11,15,11,12,2,15,15,14,13,1,4,2,11,13,2,14,15,8,2,15,14,15,8,4,2,13,4,2,15,14,8,2,14,15,14,15,14,8,4,7,8,7,11,8,7,8,4,4,2,13,2,13,4,4,1,7,12,2,15,8,3,13,4,1,7,8,4,7,8,7,8,4,7,8,5,2,15,11,12,1,7,8,4,1,7,8,1,2,13,4,3,14,9,2,11,13,2,15,14,8,4,7,8,7,8,1,1,1,1,4,7,8,2,13,2,13,1,2,12,1,1,1,2,13,2,11,13,4,1,7,8,2,13,1,1,1,1,4,7,11,12,5,4,2,9,2,15,15,14,13,2,15,11,13,4,1,5,2,15,14,8,3,11,10,11,10,15,15,12,1,4,7,11,8,3,8,5,2,13,2,15,14,15,8,3,10,8,2,11,15,8,7,14,8,2,11,12,1,7,8,7,11,12,1,4,4,4,6,10,15,15,8,2,13,2,15,8,2,11,14,10,14,8,7,8,2,11,13,2,15,14,8,7,8,4,4,2,15,11,8,5,3,13,4,2,14,13,1,1,1,4,1,2,11,15,8,7,12,1,7,14,8,4,4,4,4,1,1,5,2,15,11,8,4,4,4,1,2,15,8,1,1,7,8,4,4,4,4,4,7,8,1,7,8,4,2,15,14,15,8,7,8,1,2,15,11,15,11,8,5,1,4,4,5,2,15,14,8,4,7,8,7,10,11,10,8,2,13,4,1,7,8,7,8,7,9,2,15,8,2,13,2,15,15,14,13,1,6,10,10,15,14,12,2,15,8,1,7,8,1,7,14,15,15,15,15,8,6,9,4,7,8,6,11,11,15,8,4,7,8,2,14,15,8,7,11,15,11,11,11,8,2,15,8,3,12,1,1,1,4,5,4,2,14,9,2,15,8,2,9,2,15,11,15,8,1,7,8,7,11,8,1,4,4,4,4,4,7,9,2,15,8,7,14,11,8,4,7,8,2,13,6,13,1,1,1,4,5,4,4,1,1,5,2,13,4,2,15,8,4,1,1,1,1,1,7,8,1,4,7,11,8,5,4,4,3,14,15,15,12,2,13,1,4,7,8,1,4,4,4,2,10,15,14,8,5,4,2,14,11,11,11,14,9,4,4,7,8,4,4,4,7,8,1,2,14,15,8,7,8,4,4,7,11,11,11,11,9,4,2,15,8,5,1,4,4,7,11,8,2,13,5,1,4,2,14,15,15,11,15,8,2,13,2,11,15,8,7,8,5,4,6,8,2,14,15,8,2,15,11,8,2,15,11,13,4,1,1,5,1,2,15,8,3,15,8,2,15,11,15,8,4,1,7,14,15,15,8,1,4,4,4,1,2,15,11,9,4,7,11,15,9,4,4,2,13,1,6,9,2,15,11,11,8,4,4,4,2,15,14,15,8,5,2,15,11,15,8,4,2,13,7,8,3,14,13,1,1,2,13,4,4,3,8,2,13,4,3,14,11,11,11,8,2,13,1,2,12,7,8,4,2,13,2,11,13,4,2,9,4,2,15,8,2,13,4,2,13,2,13,4,3,10,9,1,1,7,14,8,7,11,15,8,4,7,8,4,7,11,8,1,2,15,15,14,15,8,7,8,4,7,8,4,2,15,11,13,2,13,1,1,2,9,2,15,8,1,2,11,10,9,7,8,2,13,1,2,12,2,15,11,13,4,4,2,11,13,4,1,4,4,4,4,2,15,14,8,7,11,8,5,2,15,12,2,11,13,4,2,15,14,15,8,2,15,15,14,13,2,11,13,4,4,4,2,12,1,7,14,15,8,7,14,11,9,4,7,9,4,4,4,2,13,1,1,1,6,9,4,7,9,2,15,14,9,4,5,2,15,14,8,4,4,2,13,4,4,4,4,4,4,7,8,6,15,14,8,3,12,1,2,15,11,15,8,2,11,13,2,15,15,15,11,12,1,7,8,7,8,2,13,4,1,7,8,2,11,13,2,13,1,1,6,14,13,1,1,1,4,2,15,15,11,15,8,5,4,1,1,1,4,1,7,8,4,7,9,2,15,15,15,14,15,8,6,10,13,2,15,9,2,14,13,1,2,15,11,8,1,7,14,15,15,8,3,11,11,11,15,11,13,7,8,1,1,7,14,8,3,14,8,1,2,13,4,4,2,15,14,13,1,1,2,13,2,15,14,15,8,6,11,13,2,15,14,12,2,13,2,15,8,6,13,1,1,6,14,14,11,12,1,1,2,15,8,7,15,14,14,14,15,14,9,4,7,9,2,14,13,1,1,1,1,6,11,8,5,2,13,4,2,13,1,4,2,13,4,4,4,1,1,1,7,8,4,4,4,4,1,2,13,7,14,8,4,1,7,8,2,13,4,4,2,11,11,11,12,1,1,1,6,8,4,7,8,1,1,1,6,13,2,11,12,1,1,5,2,15,14,15,8,5,1,2,10,13,1,1,2,13,6,8,4,7,8,5,1,1,1,1,1,1,2,15,9,2,14,13,1,2,12,4,6,11,8,6,13,2,15,15,14,15,10,9,2,11,15,11,11,14,8,2,15,8,7,11,15,15,8,2,13,1,7,8,3,14,15,14,8,3,15,11,8,4,4,4,7,10,14,8,5,2,15,11,14,8,2,14,13,1,4,2,11,12,2,15,12,1,1,1,2,15,14,8,6,15,8,4,2,15,9,4,7,11,8,7,8,2,14,10,14,8,2,15,8,2,13,1,2,10,11,15,11,8,2,13,1,4,1,1,1,1,4,4,4,4,1,4,4,5,2,14,15,8,5,4,1,7,14,8,5,2,15,14,8,1,1,7,14,8,7,8,4,7,11,11,11,8,7,8,5,2,15,8,7,14,8,5,3,10,11,8,2,13,4,1,7,14,8,2,12,1,7,8,5,3,10,9,4,5,2,15,11,8,6,15,8,4,7,8,7,12,2,13,4,2,15,14,8,4,2,15,8,4,2,15,14,15,14,14,8,4,7,11,15,15,8,7,11,13,2,13,1,2,11,15,8,1,7,14,13,4,1,7,14,8,2,9,7,14,9,4,7,9,4,4,4,2,15,14,9,2,15,8,1,7,8,1,4,4,4,4,2,15,11,8,1,7,8,2,13,2,15,8,3,8,4,4,7,9,2,15,8,6,13,1,6,11,15,8,1,5,2,15,11,12,1,7,14,15,8,7,8,5,4,1,1,1,5,1,4,7,11,8,1,7,14,15,8,5,2,15,14,8,2,13,4,2,9,1,5,7,8,1,7,14,8,6,9,1,4,7,9,4,7,11,15,8,5,1,4,4,7,8,2,15,14,8,7,11,15,15,8,7,8,2,14,15,8,2,13,2,15,14,8,4,7,11,15,12,2,15,8,5,1,6,11,8,1,4,2,15,8,1,2,13,4,1,1,7,14,15,8,3,13,2,14,14,9,4,7,11,8,6,8,1,1,1,6,15,8,1,7,14,8,3,13,4,2,14,13,7,8,4,1,7,8,1,4,4,7,9,2,15,11,8,7,8,1,4,7,11,15,8,4,1,7,14,15,8,1,7,14,9,4,2,13,1,6,14,11,12,1,7,14,15,15,8,1,5,2,13,4,3,10,11,8,6,10,13,2,15,8,4,2,15,11,12,4,1,1,1,6,10,13,2,13,1,4,7,11,8,6,9,2,14,14,14,13,3,8,4,1,7,8,6,11,13,4,1,5,5,2,15,14,15,8,4,7,11,11,8,2,13,4,2,15,14,8,7,11,8,1,4,5,4,1,1,1,4,4,1,5,2,15,14,15,8,5,1,2,11,12,1,1,1,1,4,2,13,2,11,13,4,4,4,4,1,2,15,14,15,8,7,8,1,4,7,11,12,2,14,13,2,15,14,9,2,15,11,8,6,9,2,14,13,1,1,1,4,2,15,14,15,8,5,2,11,15,8,5,5,2,13,1,1,4,7,9,4,4,4,4,3,13,4,1,7,10,11,8,6,14,15,11,11,10,14,14,15,15,14,9,2,13,1,1,2,15,8,4,2,11,12,6,8,2,15,14,15,8,2,15,15,15,11,15,8,2,13,1,1,6,9,4,4,7,11,12,1,2,13,1,4,1,1,4,4,7,8,4,7,8,2,13,3,10,10,10,9,2,13,1,1,6,15,12,2,15,8,5,5,2,15,8,4,3,13,2,15,11,15,15,8,3,13,4,1,4,4,4,1,5,1,4,4,4,1,5,1,1,1,4,2,15,8,2,10,15,14,15,8,4,7,9,2,14,13,1,1,4,4,1,1,1,2,13,4,2,15,14,8,5,2,15,11,15,12,1,4,2,15,8,7,8,2,15,11,15,8,3,15,8,2,15,8,4,4,4,4,2,15,8,2,9,5,1,4,7,8,5,5,2,15,14,15,8,5,2,13,4,1,7,8,2,11,13,2,15,11,13,4,1,2,15,11,15,8,7,10,8,2,15,14,15,8,4,4,1,5,1,4,7,9,2,14,13,1,6,14,11,11,10,10,12,2,11,15,8,1,3,14,9,2,15,8,1,5,2,15,14,15,14,9,4,4,7,8,1,4,4,7,8,2,13,2,15,15,11,13,2,15,14,8,4,1,2,15,11,8,1,7,8,1,1,7,8,5,2,11,13,4,3,14,8,2,13,2,13,2,11,13,4,2,13,2,15,8,3,8,4,2,13,1,1,6,11,15,8,1,4,7,9,2,14,13,1,6,13,1,4,4,4,4,3,12,2,13,4,4,4,3,12,2,13,4,4,1,2,13,1,1,1,4,7,11,15,8,6,11,15,9,2,14,13,2,13,1,2,13,4,1,7,14,15,8,2,13,4,4,4,5,4,4,2,15,14,9,4,2,11,15,8,7,14,8,5,2,15,8,2,15,15,14,13,2,13,4,4,2,15,14,15,8,4,7,8,7,8,2,15,9,2,14,13,1,6,13,1,2,15,11,15,15,8,5,2,15,15,11,15,8,5,2,15,11,13,2,14,15,8,4,4,7,11,8,1,6,13,2,13,2,14,13,1,2,15,8,2,11,15,8,1,1,7,14,8,3,11,11,13,3,15,9,4,1,7,8,3,12,2,15,8,1,7,14,13,2,15,8,4,1,1,1,1,2,15,15,15,14,13,1,1,6,11,15,8,7,8,4,5,2,14,13,1,6,13,1,4,2,15,8,1,7,8,3,12,1,1,2,13,4,3,12,1,2,11,10,9,5,2,15,11,15,8,2,14,13,1,2,15,10,9,3,12,2,15,14,12,2,13,4,4,4,1,7,14,8,4,4,5,2,13,2,15,14,15,14,8,5,2,15,8,4,1,1,5,2,15,14,15,14,8,6,10,12,1,1,1,1,1,2,14,11,8,1,6,15,8,7,9,2,13,1,2,13,1,6,9,4,7,8,2,15,8,4,3,10,12,2,11,13,4,3,14,8,4,4,4,1,2,13,4,1,4,2,13,1,4,4,1,4,4,4,3,8,1,1,5,2,15,15,15,11,12,1,7,8,7,11,9,6,15,14,13,1,1,3,14,9,4,7,8,5,2,14,15,8,1,1,1,7,8,1,2,13,6,10,14,14,8,4,7,8,4,2,13,1,6,9,2,14,15,8,6,15,14,9,4,7,11,8,2,15,14,15,8,4,3,12,2,11,13,4,1,2,15,11,13,4,2,11,13,4,3,10,15,8,7,9,2,15,11,13,4,6,8,2,15,12,1,1,1,4,5,2,15,8,5,4,4,5,1,1,1,4,4,4,1,2,15,11,8,5,2,13,1,2,10,12,2,15,14,8,2,15,11,8,1,7,14,15,15,8,7,14,15,8,5,2,14,13,1,2,13,1,1,2,15,11,8,4,4,1,1,7,14,15,8,3,12,2,11,13,2,14,13,2,11,15,8,2,11,15,8,2,15,14,15,8,2,13,2,15,11,15,10,8,1,7,8,4,2,15,9,2,15,8,3,11,13,7,14,12,2,15,11,15,8,2,15,8,2,13,2,15,8,4,4,7,8,1,7,8,2,15,8,6,8,1,1,1,1,6,13,1,1,2,15,14,13,1,2,14,11,8,4,4,7,8,4,7,11,10,8,1,1,7,8,2,13,4,2,15,14,13,1,4,2,13,4,4,2,15,8,4,1,1,5,2,14,15,8,1,2,13,4,4,2,15,8,5,2,13,4,2,15,8,4,2,13,5,1,1,2,15,8,7,14,8,7,8,2,15,14,15,8,7,11,15,8,2,15,8,4,7,8,7,10,14,8,2,14,13,1,6,8,2,13,1,1,4,4,1,4,4,7,11,15,8,7,9,4,4,4,4,2,15,8,6,11,13,4,1,1,1,2,13,2,15,11,15,8,7,8,5,2,14,13,2,13,1,6,8,2,15,15,15,14,15,8,5,2,11,13,2,15,14,15,8,5,1,4,4,4,7,8,1,7,14,15,8,6,13,1,1,6,11,8,7,8,2,15,14,15,15,8,7,8,5,2,14,13,1,2,13,2,14,15,8,6,11,15,8,7,11,15,8,1,4,5,2,15,15,11,13,2,15,8,1,2,15,15,10,12,4,4,3,12,1,4,7,8,5,4,3,14,9,1,2,15,14,15,8,4,1,1,1,1,1,6,11,12,2,11,12,1,1,7,14,13,2,15,11,11,15,8,4,1,1,1,6,13,1,6,10,15,8,2,15,14,12,1,1,1,1,4,7,8,5,2,13,1,4,2,15,14,13,1,2,13,4,3,10,15,8,1,2,14,11,13,2,13,1,2,13,2,15,14,8,4,1,5,2,15,11,15,8,5,2,15,11,8,3,13,4,1,4,4,4,1,1,7,8,3,10,10,12,2,14,13,2,15,8,2,13,4,4,1,1,5,2,13,4,4,1,2,11,10,12,2,13,1,2,15,8,1,2,12,1,1,7,8,2,10,10,15,11,8,5,2,15,8,3,10,13,1,1,2,10,11,13,4,4,1,6,14,14,13,2,13,2,15,8,2,11,10,9,7,14,15,8,1,4,7,8,7,14,13,2,13,4,2,10,11,13,2,15,15,11,12,2,15,8,4,4,4,3,10,13,1,2,15,8,4,7,11,13,2,14,13,6,15,11,13,4,4,4,2,11,10,15,8,2,15,8,2,12,7,8,2,15,8,4,4,4,7,8,2,9,2,15,14,8,6,15,8,4,4,4,4,3,11,13,4,1,1,1,5,2,15,14,11,8,4,4,4,2,9,1,7,14,8,7,11,8,1,1,5,2,11,15,8,4,4,5,2,13,1,2,15,10,11,10,15,15,15,8,2,11,8,4,5,2,15,11,8,1,2,13,1,5,1,2,15,15,11,13,4,4,2,15,14,8,7,8,4,7,9,4,2,15,8,7,11,11,11,8,4,4,4,1,7,8,5,1,6,11,15,15,15,8,2,11,13,4,4,4,3,12,1,1,4,4,7,11,15,8,2,12,1,7,14,15,8,6,8,2,15,8,2,15,8,7,11,9,2,15,8,4,1,4,4,4,1,1,7,8,4,4,2,15,9,2,15,8,4,2,14,15,8,7,14,12,1,1,2,15,11,15,8,1,7,14,15,8,7,9,2,15,14,11,10,9,4,4,4,2,15,11,13,2,15,8,7,14,11,8,1,1,7,8,4,2,11,15,11,13,4,3,8,4,7,11,15,8,7,8,2,13,4,1,1,1,6,9,2,14,9,4,4,7,8,7,8,2,14,15,10,9,4,7,11,15,8,4,3,10,15,15,8,7,8,4,5,2,15,14,13,1,4,1,1,7,14,8,4,1,2,13,4,2,9,1,1,4,5,2,14,13,1,4,4,2,15,15,15,10,9,4,5,2,15,8,5,3,8,4,4,4,3,14,15,8,6,13,2,11,15,8,4,7,11,8,1,2,15,8,2,11,11,12,6,8,5,2,14,13,2,15,11,15,8,5,4,2,13,1,4,2,15,11,8,7,14,15,8,4,1,7,10,9,4,7,9,2,13,1,1,4,5,6,8,1,7,8,5,4,2,11,15,8,2,10,10,11,15,14,13,1,2,15,15,14,13,1,1,4,4,7,9,2,15,8,1,4,4,7,11,15,8,1,7,8,1,7,8,4,5,2,15,11,8,6,8,2,15,8,4,4,4,7,9,2,15,14,13,1,2,13,4,1,6,11,13,2,15,14,13,2,13,4,2,9,1,7,14,15,8,1,4,4,7,9,2,14,15,8,6,11,13,5,2,14,15,8,3,15,8,2,13,4,4,4,4,4,1,5,1,2,14,13,1,1,3,8,2,15,11,15,8,2,15,8,4,7,11,15,8,7,14,8,7,14,8,1,4,7,9,2,15,8,2,13,2,14,15,8,7,11,11,15,8,2,13,1,1,4,2,11,15,8,5,2,11,12,1,1,5,2,11,13,4,2,12,1,1,7,8,4,7,11,11,8,2,13,1,2,9,2,13,7,14,13,1,4,4,7,8,2,15,15,15,15,11,15,8,1,2,14,13,1,6,8,4,4,4,7,8,1,2,14,15,8,7,11,8,1,4,1,7,8,1,3,14,8,7,9,4,4,7,8,4,5,2,13,1,2,13,4,4,3,12,2,15,14,14,9,4,2,13,4,3,8,4,5,2,14,15,8,2,11,15,8,3,12,2,15,14,15,15,8,4,4,2,15,14,8,4,2,13,5,1,1,6,11,15,15,8,4,1,1,1,1,4,7,8,2,14,13,1,4,5,2,15,11,15,11,8,2,14,13,1,4,7,8,4,4,5,2,15,14,8,4,3,10,9,4,7,11,15,8,7,9,2,15,14,8,7,11,13,4,3,8,1,1,7,14,13,2,11,15,8,2,15,9,2,13,1,4,4,4,7,8,2,13,4,1,1,1,5,2,15,11,12,1,7,14,15,8,5,7,14,8,7,8,1,7,8,7,10,14,8,4,7,9,2,14,13,1,4,7,9,2,13,4,3,12,2,14,13,1,6,11,15,8,7,11,15,12,1,7,14,15,8,4,2,15,11,8,1,2,15,10,8,1,7,8,1,6,11,15,8,4,4,4,1,1,7,8,2,13,4,2,13,2,14,9,4,7,11,15,15,8,6,11,13,2,14,14,13,2,13,2,11,12,1,1,7,8,5,1,7,14,15,8,2,15,8,1,4,5,2,15,9,2,14,13,1,6,11,13,4,2,11,13,4,1,2,13,1,4,7,8,1,4,7,8,1,7,12,1,1,7,14,15,8,7,8,2,14,10,13,4,4,2,15,8,4,1,2,13,2,15,11,11,10,10,15,8,2,11,15,8,7,14,9,4,7,11,8,1,5,2,9,2,11,14,13,1,1,2,15,12,2,11,12,2,15,8,5,4,1,1,1,4,2,15,14,8,7,9,4,7,8,2,13,1,2,9,2,11,15,8,2,11,13,4,2,15,14,15,15,8,6,11,13,4,4,1,1,4,4,1,1,7,8,7,8,2,13,2,11,11,13,2,15,14,15,8,6,11,10,9,4,4,4,4,3,14,8,4,7,8,5,1,2,15,11,8,2,14,9,4,4,4,2,9,1,4,4,4,1,7,8,2,15,14,15,8,5,7,14,14,10,15,8,1,7,8,5,2,15,9,2,14,15,8,4,4,4,2,15,10,12,2,15,11,12,1,1,1,1,6,13,2,15,11,15,8,2,15,11,12,2,15,8,5,4,2,9,4,4,4,7,8,1,1,7,8,1,4,4,4,7,11,15,15,8,1,4,7,11,8,7,12,2,13,4,2,10,13,2,15,11,13,4,4,2,15,15,15,14,15,8,4,1,1,1,2,13,5,1,1,2,13,4,2,15,14,9,2,13,2,14,13,1,6,11,15,15,8,7,8,7,12,1,2,15,14,14,14,14,13,1,4,1,2,13,2,14,13,2,15,14,15,8,3,13,4,2,15,11,15,11,10,8,2,15,8,4,7,11,15,15,8,1,7,8,4,7,11,8,4,1,5,2,11,13,4,4,1,2,13,2,15,15,15,14,13,1,1,1,1,2,11,14,10,14,8,5,7,8,4,2,15,11,12,1,7,8,2,13,2,13,1,6,11,8,1,7,14,15,8,1,7,8,4,1,1,1,1,1,1,4,7,8,2,15,14,13,1,4,1,1,1,2,14,11,15,8,5,4,3,8,4,2,14,15,8,7,11,8,1,1,2,14,15,8,7,11,8,2,13,2,15,12,2,15,11,13,4,2,15,8,1,1,1,1,1,6,10,14,8,4,2,13,4,3,14,9,7,8,5,4,1,2,13,2,15,12,2,13,2,15,14,15,8,4,4,1,1,1,4,2,15,8,3,14,10,12,4,4,6,11,11,14,8,1,1,1,2,15,10,12,4,2,13,2,15,8,3,15,8,2,15,14,13,1,6,11,8,4,4,4,2,13,1,6,11,8,2,10,13,4,1,7,8,1,2,11,13,2,15,8,2,12,2,14,10,13,4,3,14,15,8,3,15,8,7,12,7,8,3,13,4,2,11,12,1,5,2,11,12,1,1,1,6,11,15,10,10,8,3,14,15,8,6,13,2,15,15,11,13,4,4,3,14,14,14,8,6,13,2,11,13,2,13,2,13,4,2,13,4,2,13,1,1,6,11,8,6,15,11,13,2,15,8,7,8,4,4,4,7,9,2,15,8,4,4,2,13,2,15,14,8,3,14,13,2,11,15,8,1,7,14,8,7,8,1,5,7,8,4,3,13,4,2,15,14,9,4,4,7,10,14,10,11,8,1,4,4,2,14,13,1,6,13,1,4,1,1,2,15,11,13,4,1,1,7,8,5,1,4,2,13,2,13,2,11,13,4,3,11,14,15,8,4,7,8,2,13,1,2,15,14,11,10,11,8,7,11,15,15,12,2,15,14,15,9,2,13,4,1,7,14,8,5,1,4,2,13,4,2,9,7,14,15,8,6,13,7,14,15,8,3,11,12,1,1,4,7,11,15,8,1,4,4,4,2,15,15,14,13,1,2,13,1,6,11,10,14,8,1,2,11,15,8,2,15,8,7,14,9,2,15,14,11,8,2,11,13,4,2,13,1,4,3,13,4,2,11,10,12,1,1,4,4,4,2,13,4,1,1,7,8,1,1,7,12,2,15,11,12,1,7,8,7,14,13,2,11,13,4,2,9,1,1,2,13,1,1,1,7,8,4,4,7,8,4,7,11,8,3,12,2,15,15,15,14,13,1,1,1,4,2,15,8,1,4,4,7,8,4,4,4,7,8,6,15,8,1,7,10,8,1,1,4,4,4,4,3,13,4,3,10,15,8,3,13,4,4,4,3,8,2,15,11,15,8,3,13,4,2,15,8,6,8,1,5,2,15,8,1,2,15,8,1,1,7,12,2,11,15,8,4,6,8,2,15,8,4,2,15,8,7,11,9,2,15,9,4,4,4,1,2,13,1,1,1,1,4,2,12,3,14,15,8,4,7,11,9,4,7,11,15,15,8,5,1,4,2,15,8,4,4,4,7,11,15,15,8,3,13,4,4,3,14,8,3,15,11,13,4,2,14,13,2,13,4,4,3,15,8,3,10,15,8,2,13,2,13,4,4,2,15,8,2,12,1,7,8,4,7,8,7,11,8,2,15,12,3,14,15,10,9,4,4,4,5,2,15,11,13,4,2,15,14,8,6,10,15,8,3,10,13,1,6,11,9,4,4,7,11,8,1,1,2,15,14,15,8,1,4,7,11,15,15,8,1,7,8,2,15,11,15,8,7,14,8,1,6,11,11,10,9,1,2,15,11,15,8,5,4,4,4,3,8,2,13,2,15,15,15,14,15,8,2,11,14,13,2,15,11,8,7,8,4,4,1,5,2,13,1,4,2,15,11,11,9,2,13,2,15,11,12,1,7,14,15,8,7,14,8,4,3,10,11,8,4,7,11,15,8,6,14,10,12,1,1,7,14,8,7,11,8,1,1,6,14,15,8,2,9,4,7,8,1,7,14,8,1,4,4,4,4,4,2,9,2,15,8,7,15,11,15,8,2,14,15,8,1,1,1,1,1,4,4,2,9,1,4,7,8,4,5,2,15,15,14,13,2,15,14,9,2,13,4,4,2,14,15,12,1,2,13,4,1,1,1,4,1,7,14,15,8,4,4,4,7,11,8,1,2,13,1,2,11,12,4,1,7,14,15,8,2,14,14,13,1,1,4,4,4,7,11,8,4,1,7,8,4,7,11,15,15,15,8,4,4,7,8,5,1,2,13,4,2,13,1,6,10,14,8,6,10,15,15,8,4,4,7,11,8,3,13,2,13,1,1,1,2,9,3,8,2,11,11,11,10,9,1,3,8,2,11,11,10,10,10,11,10,9,1,3,10,11,11,11,11,8,2,10,10,11,10,8,2,11,11,10,9,1,1,2,10,9,1,3,10,10,11,11,11,11,8,2,11,10,11,10,11,11,8,1,1,3,10,11,11,11,8,3,8,2,11,11,10,11,10,11,8,3,10,11,8,1,3,10,11,11,11,8,2,10,11,10,11,10,10,8]),c=[{x:0,y:0},{x:1,y:0},{x:2,y:0},{x:2,y:1},{x:3,y:1},{x:3,y:2},{x:3,y:3},{x:3,y:4},{x:2,y:4},{x:2,y:5},{x:1,y:5},{x:0,y:5},{x:0,y:6},{x:0,y:7},{x:1,y:7},{x:2,y:7},{x:3,y:7},{x:3,y:6},{x:4,y:6},{x:4,y:5},{x:5,y:5},{x:6,y:5},{x:6,y:4},{x:7,y:4},{x:7,y:3},{x:8,y:3},{x:8,y:2},{x:9,y:2},{x:10,y:2},{x:11,y:2},{x:11,y:1},{x:11,y:0},{x:12,y:0},{x:13,y:0},{x:13,y:1},{x:13,y:2},{x:14,y:2},{x:14,y:3},{x:15,y:3},{x:15,y:4},{x:15,y:5},{x:16,y:5},{x:17,y:5},{x:17,y:4},{x:17,y:3},{x:17,y:2},{x:18,y:2},{x:18,y:1},{x:18,y:0},{x:19,y:0},{x:20,y:0},{x:21,y:0},{x:21,y:1},{x:21,y:2},{x:21,y:3},{x:20,y:3},{x:20,y:4},{x:19,y:4},{x:19,y:5},{x:19,y:6},{x:18,y:6},{x:18,y:7},{x:18,y:8},{x:19,y:8},{x:19,y:9},{x:20,y:9},{x:21,y:9},{x:22,y:9},{x:23,y:9},{x:23,y:8},{x:23,y:7},{x:24,y:7},{x:24,y:6},{x:24,y:5},{x:24,y:4},{x:24,y:3},{x:24,y:2},{x:23,y:2},{x:23,y:1},{x:23,y:0},{x:24,y:0},{x:25,y:0},{x:25,y:1},{x:26,y:1},{x:26,y:2},{x:26,y:3},{x:26,y:4},{x:26,y:5},{x:26,y:6},{x:27,y:6},{x:27,y:7},{x:28,y:7},{x:28,y:8},{x:28,y:9},{x:27,y:9},{x:26,y:9},{x:26,y:10},{x:26,y:11},{x:27,y:11},{x:27,y:12},{x:28,y:12},{x:28,y:13},{x:29,y:13},{x:29,y:14},{x:29,y:15},{x:29,y:16},{x:29,y:17},{x:30,y:17},{x:31,y:17},{x:32,y:17},{x:32,y:16},{x:33,y:16},{x:33,y:15},{x:33,y:14},{x:34,y:14},{x:35,y:14},{x:35,y:15},{x:36,y:15},{x:37,y:15},{x:37,y:16},{x:37,y:17},{x:36,y:17},{x:36,y:18},{x:36,y:19},{x:37,y:19},{x:37,y:20},{x:37,y:21},{x:38,y:21},{x:39,y:21},{x:39,y:20},{x:39,y:19},{x:40,y:19},{x:41,y:19},{x:41,y:20},{x:41,y:21},{x:42,y:21},{x:42,y:22},{x:43,y:22},{x:43,y:23},{x:43,y:24},{x:42,y:24},{x:42,y:25},{x:42,y:26},{x:41,y:26},{x:40,y:26},{x:40,y:25},{x:40,y:24},{x:39,y:24},{x:38,y:24},{x:37,y:24},{x:37,y:23},{x:36,y:23},{x:35,y:23},{x:35,y:24},{x:34,y:24},{x:33,y:24},{x:32,y:24},{x:32,y:25},{x:31,y:25},{x:31,y:26},{x:30,y:26},{x:29,y:26},{x:28,y:26},{x:28,y:27},{x:27,y:27},{x:27,y:28},{x:26,y:28},{x:25,y:28},{x:25,y:29},{x:24,y:29},{x:23,y:29},{x:22,y:29},{x:22,y:30},{x:21,y:30},{x:20,y:30},{x:20,y:29},{x:19,y:29},{x:19,y:28},{x:18,y:28},{x:18,y:27},{x:17,y:27},{x:17,y:26},{x:16,y:26},{x:15,y:26},{x:15,y:27},{x:15,y:28},{x:14,y:28},{x:14,y:29},{x:13,y:29},{x:13,y:30},{x:13,y:31},{x:12,y:31},{x:12,y:32},{x:11,y:32},{x:10,y:32},{x:10,y:33},{x:10,y:34},{x:10,y:35},{x:10,y:36},{x:9,y:36},{x:9,y:37},{x:8,y:37},{x:8,y:38},{x:8,y:39},{x:9,y:39},{x:10,y:39},{x:11,y:39},{x:12,y:39},{x:12,y:38},{x:12,y:37},{x:12,y:36},{x:13,y:36},{x:13,y:35},{x:13,y:34},{x:13,y:33},{x:14,y:33},{x:15,y:33},{x:15,y:34},{x:16,y:34},{x:16,y:35},{x:17,y:35},{x:17,y:36},{x:17,y:37},{x:18,y:37},{x:18,y:38},{x:19,y:38},{x:19,y:39},{x:19,y:40},{x:19,y:41},{x:18,y:41},{x:18,y:42},{x:17,y:42},{x:17,y:43},{x:17,y:44},{x:17,y:45},{x:17,y:46},{x:18,y:46},{x:18,y:47},{x:19,y:47},{x:19,y:48},{x:20,y:48},{x:21,y:48},{x:22,y:48},{x:23,y:48},{x:24,y:48},{x:24,y:49},{x:24,y:50},{x:23,y:50},{x:23,y:51},{x:23,y:52},{x:24,y:52},{x:24,y:53},{x:24,y:54},{x:25,y:54},{x:26,y:54},{x:26,y:53},{x:26,y:52},{x:27,y:52},{x:27,y:51},{x:27,y:50},{x:28,y:50},{x:28,y:49},{x:29,y:49},{x:29,y:48},{x:29,y:47},{x:30,y:47},{x:30,y:46},{x:31,y:46},{x:31,y:45},{x:31,y:44},{x:30,y:44},{x:30,y:43},{x:29,y:43},{x:29,y:42},{x:29,y:41},{x:29,y:40},{x:29,y:39},{x:30,y:39},{x:31,y:39},{x:31,y:40},{x:32,y:40},{x:33,y:40},{x:34,y:40},{x:34,y:41},{x:35,y:41},{x:35,y:42},{x:36,y:42},{x:37,y:42},{x:38,y:42},{x:38,y:43},{x:38,y:44},{x:39,y:44},{x:39,y:45},{x:39,y:46},{x:40,y:46},{x:41,y:46},{x:41,y:47},{x:41,y:48},{x:40,y:48},{x:40,y:49},{x:40,y:50},{x:40,y:51},{x:40,y:52},{x:39,y:52},{x:38,y:52},{x:38,y:53},{x:38,y:54},{x:38,y:55},{x:37,y:55},{x:36,y:55},{x:36,y:54},{x:36,y:53},{x:35,y:53},{x:35,y:52},{x:34,y:52},{x:34,y:51},{x:33,y:51},{x:33,y:50},{x:32,y:50},{x:31,y:50},{x:31,y:51},{x:31,y:52},{x:32,y:52},{x:32,y:53},{x:32,y:54},{x:33,y:54},{x:34,y:54},{x:34,y:55},{x:34,y:56},{x:35,y:56},{x:35,y:57},{x:36,y:57},{x:36,y:58},{x:36,y:59},{x:35,y:59},{x:35,y:60},{x:35,y:61},{x:34,y:61},{x:33,y:61},{x:33,y:62},{x:33,y:63},{x:33,y:64},{x:32,y:64},{x:31,y:64},{x:31,y:65},{x:31,y:66},{x:30,y:66},{x:29,y:66},{x:29,y:67},{x:28,y:67},{x:27,y:67},{x:26,y:67},{x:25,y:67},{x:25,y:66},{x:25,y:65},{x:25,y:64},{x:24,y:64},{x:23,y:64},{x:23,y:65},{x:23,y:66},{x:22,y:66},{x:21,y:66},{x:20,y:66},{x:20,y:65},{x:19,y:65},{x:19,y:64},{x:18,y:64},{x:17,y:64},{x:17,y:65},{x:17,y:66},{x:17,y:67},{x:17,y:68},{x:18,y:68},{x:19,y:68},{x:20,y:68},{x:20,y:69},{x:20,y:70},{x:21,y:70},{x:21,y:71},{x:21,y:72},{x:21,y:73},{x:22,y:73},{x:23,y:73},{x:24,y:73},{x:24,y:72},{x:24,y:71},{x:24,y:70},{x:25,y:70},{x:25,y:69},{x:26,y:69},{x:27,y:69},{x:28,y:69},{x:28,y:70},{x:29,y:70},{x:30,y:70},{x:31,y:70},{x:31,y:69},{x:31,y:68},{x:32,y:68},{x:32,y:67},{x:33,y:67},{x:34,y:67},{x:34,y:66},{x:34,y:65},{x:35,y:65},{x:36,y:65},{x:36,y:66},{x:36,y:67},{x:36,y:68},{x:35,y:68},{x:35,y:69},{x:35,y:70},{x:34,y:70},{x:33,y:70},{x:33,y:71},{x:32,y:71},{x:32,y:72},{x:31,y:72},{x:31,y:73},{x:30,y:73},{x:30,y:74},{x:30,y:75},{x:30,y:76},{x:31,y:76},{x:31,y:77},{x:31,y:78},{x:31,y:79},{x:31,y:80},{x:31,y:81},{x:31,y:82},{x:30,y:82},{x:30,y:83},{x:29,y:83},{x:29,y:84},{x:28,y:84},{x:28,y:85},{x:28,y:86},{x:29,y:86},{x:30,y:86},{x:31,y:86},{x:31,y:85},{x:31,y:84},{x:32,y:84},{x:33,y:84},{x:33,y:83},{x:33,y:82},{x:34,y:82},{x:34,y:81},{x:35,y:81},{x:36,y:81},{x:36,y:80},{x:37,y:80},{x:38,y:80},{x:38,y:81},{x:39,y:81},{x:39,y:82},{x:39,y:83},{x:40,y:83},{x:40,y:84},{x:41,y:84},{x:42,y:84},{x:42,y:85},{x:43,y:85},{x:44,y:85},{x:44,y:86},{x:44,y:87},{x:44,y:88},{x:43,y:88},{x:42,y:88},{x:42,y:87},{x:41,y:87},{x:40,y:87},{x:40,y:88},{x:39,y:88},{x:39,y:89},{x:38,y:89},{x:37,y:89},{x:37,y:88},{x:37,y:87},{x:36,y:87},{x:35,y:87},{x:35,y:86},{x:34,y:86},{x:33,y:86},{x:33,y:87},{x:32,y:87},{x:32,y:88},{x:31,y:88},{x:30,y:88},{x:29,y:88},{x:28,y:88},{x:27,y:88},{x:27,y:87},{x:26,y:87},{x:25,y:87},{x:25,y:86},{x:24,y:86},{x:24,y:85},{x:23,y:85},{x:23,y:84},{x:23,y:83},{x:24,y:83},{x:25,y:83},{x:26,y:83},{x:26,y:82},{x:26,y:81},{x:27,y:81},{x:28,y:81},{x:28,y:80},{x:29,y:80},{x:29,y:79},{x:29,y:78},{x:28,y:78},{x:27,y:78},{x:27,y:79},{x:26,y:79},{x:25,y:79},{x:24,y:79},{x:23,y:79},{x:23,y:80},{x:22,y:80},{x:21,y:80},{x:20,y:80},{x:20,y:81},{x:19,y:81},{x:19,y:82},{x:18,y:82},{x:18,y:83},{x:17,y:83},{x:17,y:84},{x:16,y:84},{x:16,y:85},{x:15,y:85},{x:15,y:86},{x:15,y:87},{x:14,y:87},{x:14,y:88},{x:13,y:88},{x:13,y:89},{x:13,y:90},{x:14,y:90},{x:15,y:90},{x:15,y:89},{x:16,y:89},{x:16,y:88},{x:17,y:88},{x:18,y:88},{x:19,y:88},{x:19,y:89},{x:20,y:89},{x:21,y:89},{x:21,y:88},{x:21,y:87},{x:22,y:87},{x:23,y:87},{x:23,y:88},{x:24,y:88},{x:24,y:89},{x:24,y:90},{x:24,y:91},{x:23,y:91},{x:23,y:92},{x:22,y:92},{x:22,y:93},{x:21,y:93},{x:20,y:93},{x:19,y:93},{x:19,y:94},{x:18,y:94},{x:17,y:94},{x:16,y:94},{x:15,y:94},{x:15,y:95},{x:15,y:96},{x:16,y:96},{x:16,y:97},{x:17,y:97},{x:18,y:97},{x:18,y:96},{x:19,y:96},{x:20,y:96},{x:20,y:97},{x:21,y:97},{x:21,y:98},{x:22,y:98},{x:23,y:98},{x:23,y:99},{x:24,y:99},{x:25,y:99},{x:26,y:99},{x:27,y:99},{x:28,y:99},{x:28,y:98},{x:29,y:98},{x:29,y:97},{x:30,y:97},{x:31,y:97},{x:31,y:96},{x:32,y:96},{x:32,y:95},{x:33,y:95},{x:34,y:95},{x:35,y:95},{x:35,y:94},{x:35,y:93},{x:34,y:93},{x:34,y:92},{x:33,y:92},{x:32,y:92},{x:32,y:91},{x:32,y:90},{x:33,y:90},{x:34,y:90},{x:35,y:90},{x:35,y:91},{x:36,y:91},{x:37,y:91},{x:38,y:91},{x:38,y:92},{x:38,y:93},{x:38,y:94},{x:37,y:94},{x:37,y:95},{x:37,y:96},{x:38,y:96},{x:39,y:96},{x:39,y:97},{x:40,y:97},{x:40,y:98},{x:41,y:98},{x:42,y:98},{x:42,y:97},{x:43,y:97},{x:43,y:96},{x:44,y:96},{x:45,y:96},{x:46,y:96},{x:46,y:95},{x:47,y:95},{x:48,y:95},{x:49,y:95},{x:49,y:96},{x:49,y:97},{x:48,y:97},{x:47,y:97},{x:47,y:98},{x:47,y:99},{x:48,y:99},{x:49,y:99},{x:50,y:99},{x:51,y:99},{x:52,y:99},{x:53,y:99},{x:53,y:98},{x:54,y:98},{x:54,y:97},{x:54,y:96},{x:53,y:96},{x:52,y:96},{x:52,y:95},{x:51,y:95},{x:51,y:94},{x:50,y:94},{x:50,y:93},{x:49,y:93},{x:49,y:92},{x:48,y:92},{x:48,y:91},{x:48,y:90},{x:48,y:89},{x:47,y:89},{x:47,y:88},{x:46,y:88},{x:46,y:87},{x:46,y:86},{x:46,y:85},{x:46,y:84},{x:47,y:84},{x:47,y:83},{x:48,y:83},{x:49,y:83},{x:49,y:82},{x:49,y:81},{x:49,y:80},{x:50,y:80},{x:50,y:79},{x:51,y:79},{x:51,y:78},{x:52,y:78},{x:53,y:78},{x:53,y:77},{x:54,y:77},{x:55,y:77},{x:55,y:78},{x:55,y:79},{x:55,y:80},{x:55,y:81},{x:54,y:81},{x:54,y:82},{x:54,y:83},{x:55,y:83},{x:55,y:84},{x:55,y:85},{x:55,y:86},{x:56,y:86},{x:57,y:86},{x:57,y:87},{x:57,y:88},{x:57,y:89},{x:56,y:89},{x:56,y:90},{x:55,y:90},{x:54,y:90},{x:54,y:91},{x:54,y:92},{x:53,y:92},{x:53,y:93},{x:53,y:94},{x:54,y:94},{x:55,y:94},{x:55,y:95},{x:56,y:95},{x:56,y:96},{x:57,y:96},{x:57,y:97},{x:58,y:97},{x:58,y:98},{x:58,y:99},{x:59,y:99},{x:60,y:99},{x:61,y:99},{x:61,y:98},{x:62,y:98},{x:63,y:98},{x:64,y:98},{x:65,y:98},{x:65,y:99},{x:66,y:99},{x:67,y:99},{x:68,y:99},{x:69,y:99},{x:69,y:98},{x:69,y:97},{x:69,y:96},{x:68,y:96},{x:67,y:96},{x:67,y:95},{x:67,y:94},{x:66,y:94},{x:65,y:94},{x:65,y:95},{x:64,y:95},{x:64,y:96},{x:63,y:96},{x:62,y:96},{x:61,y:96},{x:61,y:95},{x:60,y:95},{x:59,y:95},{x:58,y:95},{x:58,y:94},{x:57,y:94},{x:57,y:93},{x:57,y:92},{x:57,y:91},{x:58,y:91},{x:58,y:90},{x:59,y:90},{x:59,y:89},{x:60,y:89},{x:60,y:88},{x:61,y:88},{x:62,y:88},{x:63,y:88},{x:63,y:87},{x:64,y:87},{x:65,y:87},{x:66,y:87},{x:66,y:88},{x:66,y:89},{x:65,y:89},{x:65,y:90},{x:65,y:91},{x:65,y:92},{x:66,y:92},{x:67,y:92},{x:67,y:91},{x:67,y:90},{x:68,y:90},{x:68,y:89},{x:69,y:89},{x:69,y:88},{x:70,y:88},{x:70,y:87},{x:71,y:87},{x:71,y:86},{x:71,y:85},{x:70,y:85},{x:70,y:84},{x:70,y:83},{x:69,y:83},{x:69,y:82},{x:69,y:81},{x:68,y:81},{x:68,y:80},{x:68,y:79},{x:69,y:79},{x:70,y:79},{x:70,y:78},{x:70,y:77},{x:70,y:76},{x:69,y:76},{x:69,y:75},{x:69,y:74},{x:70,y:74},{x:70,y:73},{x:70,y:72},{x:69,y:72},{x:68,y:72},{x:68,y:71},{x:68,y:70},{x:67,y:70},{x:67,y:69},{x:66,y:69},{x:65,y:69},{x:65,y:70},{x:64,y:70},{x:64,y:71},{x:63,y:71},{x:62,y:71},{x:62,y:70},{x:61,y:70},{x:61,y:69},{x:60,y:69},{x:60,y:68},{x:59,y:68},{x:59,y:67},{x:59,y:66},{x:58,y:66},{x:57,y:66},{x:56,y:66},{x:56,y:65},{x:56,y:64},{x:55,y:64},{x:55,y:63},{x:55,y:62},{x:54,y:62},{x:53,y:62},{x:52,y:62},{x:51,y:62},{x:51,y:61},{x:50,y:61},{x:50,y:60},{x:50,y:59},{x:50,y:58},{x:50,y:57},{x:51,y:57},{x:51,y:56},{x:52,y:56},{x:52,y:55},{x:52,y:54},{x:52,y:53},{x:51,y:53},{x:50,y:53},{x:49,y:53},{x:49,y:52},{x:48,y:52},{x:48,y:51},{x:48,y:50},{x:47,y:50},{x:46,y:50},{x:46,y:51},{x:46,y:52},{x:45,y:52},{x:44,y:52},{x:43,y:52},{x:43,y:51},{x:43,y:50},{x:43,y:49},{x:43,y:48},{x:44,y:48},{x:45,y:48},{x:46,y:48},{x:47,y:48},{x:48,y:48},{x:48,y:47},{x:48,y:46},{x:47,y:46},{x:47,y:45},{x:47,y:44},{x:46,y:44},{x:45,y:44},{x:45,y:43},{x:44,y:43},{x:44,y:42},{x:43,y:42},{x:43,y:41},{x:42,y:41},{x:42,y:40},{x:41,y:40},{x:40,y:40},{x:40,y:39},{x:40,y:38},{x:41,y:38},{x:42,y:38},{x:43,y:38},{x:43,y:37},{x:44,y:37},{x:45,y:37},{x:45,y:36},{x:45,y:35},{x:46,y:35},{x:46,y:34},{x:46,y:33},{x:46,y:32},{x:46,y:31},{x:47,y:31},{x:47,y:30},{x:48,y:30},{x:48,y:29},{x:48,y:28},{x:47,y:28},{x:46,y:28},{x:46,y:27},{x:45,y:27},{x:44,y:27},{x:44,y:26},{x:44,y:25},{x:45,y:25},{x:46,y:25},{x:46,y:24},{x:46,y:23},{x:45,y:23},{x:45,y:22},{x:45,y:21},{x:44,y:21},{x:44,y:20},{x:44,y:19},{x:43,y:19},{x:43,y:18},{x:42,y:18},{x:42,y:17},{x:41,y:17},{x:40,y:17},{x:40,y:16},{x:40,y:15},{x:39,y:15},{x:39,y:14},{x:39,y:13},{x:39,y:12},{x:38,y:12},{x:37,y:12},{x:37,y:11},{x:36,y:11},{x:35,y:11},{x:34,y:11},{x:34,y:10},{x:33,y:10},{x:32,y:10},{x:32,y:9},{x:32,y:8},{x:31,y:8},{x:30,y:8},{x:30,y:7},{x:30,y:6},{x:31,y:6},{x:31,y:5},{x:32,y:5},{x:32,y:4},{x:32,y:3},{x:31,y:3},{x:30,y:3},{x:30,y:4},{x:29,y:4},{x:28,y:4},{x:28,y:3},{x:28,y:2},{x:29,y:2},{x:29,y:1},{x:30,y:1},{x:31,y:1},{x:32,y:1},{x:32,y:0},{x:33,y:0},{x:34,y:0},{x:35,y:0},{x:35,y:1},{x:36,y:1},{x:36,y:2},{x:36,y:3},{x:37,y:3},{x:37,y:4},{x:37,y:5},{x:36,y:5},{x:35,y:5},{x:35,y:6},{x:34,y:6},{x:34,y:7},{x:34,y:8},{x:35,y:8},{x:36,y:8},{x:37,y:8},{x:37,y:7},{x:38,y:7},{x:39,y:7},{x:39,y:8},{x:39,y:9},{x:39,y:10},{x:40,y:10},{x:41,y:10},{x:42,y:10},{x:42,y:9},{x:42,y:8},{x:42,y:7},{x:43,y:7},{x:44,y:7},{x:44,y:8},{x:44,y:9},{x:45,y:9},{x:46,y:9},{x:47,y:9},{x:47,y:8},{x:48,y:8},{x:49,y:8},{x:50,y:8},{x:51,y:8},{x:52,y:8},{x:53,y:8},{x:53,y:9},{x:54,y:9},{x:54,y:10},{x:54,y:11},{x:54,y:12},{x:53,y:12},{x:52,y:12},{x:51,y:12},{x:51,y:13},{x:50,y:13},{x:50,y:14},{x:49,y:14},{x:48,y:14},{x:48,y:15},{x:48,y:16},{x:48,y:17},{x:48,y:18},{x:47,y:18},{x:47,y:19},{x:47,y:20},{x:48,y:20},{x:48,y:21},{x:48,y:22},{x:49,y:22},{x:50,y:22},{x:51,y:22},{x:51,y:21},{x:51,y:20},{x:52,y:20},{x:53,y:20},{x:54,y:20},{x:55,y:20},{x:55,y:21},{x:55,y:22},{x:55,y:23},{x:54,y:23},{x:53,y:23},{x:52,y:23},{x:52,y:24},{x:52,y:25},{x:53,y:25},{x:53,y:26},{x:54,y:26},{x:55,y:26},{x:56,y:26},{x:56,y:25},{x:57,y:25},{x:57,y:24},{x:58,y:24},{x:58,y:23},{x:59,y:23},{x:60,y:23},{x:60,y:22},{x:60,y:21},{x:61,y:21},{x:62,y:21},{x:62,y:22},{x:63,y:22},{x:63,y:23},{x:63,y:24},{x:64,y:24},{x:64,y:25},{x:65,y:25},{x:66,y:25},{x:66,y:26},{x:67,y:26},{x:68,y:26},{x:69,y:26},{x:70,y:26},{x:70,y:25},{x:70,y:24},{x:71,y:24},{x:72,y:24},{x:72,y:23},{x:73,y:23},{x:73,y:22},{x:73,y:21},{x:74,y:21},{x:75,y:21},{x:75,y:22},{x:76,y:22},{x:76,y:23},{x:76,y:24},{x:77,y:24},{x:78,y:24},{x:78,y:25},{x:78,y:26},{x:79,y:26},{x:80,y:26},{x:81,y:26},{x:81,y:25},{x:82,y:25},{x:83,y:25},{x:83,y:26},{x:83,y:27},{x:82,y:27},{x:82,y:28},{x:82,y:29},{x:82,y:30},{x:83,y:30},{x:83,y:31},{x:84,y:31},{x:84,y:32},{x:84,y:33},{x:83,y:33},{x:82,y:33},{x:81,y:33},{x:81,y:34},{x:81,y:35},{x:82,y:35},{x:82,y:36},{x:82,y:37},{x:82,y:38},{x:82,y:39},{x:83,y:39},{x:83,y:40},{x:84,y:40},{x:85,y:40},{x:86,y:40},{x:86,y:39},{x:86,y:38},{x:85,y:38},{x:85,y:37},{x:85,y:36},{x:85,y:35},{x:85,y:34},{x:86,y:34},{x:87,y:34},{x:88,y:34},{x:88,y:35},{x:88,y:36},{x:89,y:36},{x:89,y:37},{x:90,y:37},{x:91,y:37},{x:92,y:37},{x:93,y:37},{x:93,y:38},{x:93,y:39},{x:92,y:39},{x:91,y:39},{x:91,y:40},{x:91,y:41},{x:91,y:42},{x:90,y:42},{x:89,y:42},{x:88,y:42},{x:87,y:42},{x:87,y:43},{x:87,y:44},{x:88,y:44},{x:88,y:45},{x:88,y:46},{x:89,y:46},{x:89,y:47},{x:89,y:48},{x:89,y:49},{x:89,y:50},{x:88,y:50},{x:87,y:50},{x:87,y:51},{x:87,y:52},{x:88,y:52},{x:88,y:53},{x:89,y:53},{x:90,y:53},{x:91,y:53},{x:91,y:54},{x:91,y:55},{x:91,y:56},{x:90,y:56},{x:90,y:57},{x:90,y:58},{x:91,y:58},{x:91,y:59},{x:92,y:59},{x:92,y:60},{x:92,y:61},{x:91,y:61},{x:90,y:61},{x:90,y:62},{x:90,y:63},{x:90,y:64},{x:91,y:64},{x:91,y:65},{x:92,y:65},{x:93,y:65},{x:93,y:66},{x:94,y:66},{x:94,y:67},{x:95,y:67},{x:95,y:68},{x:95,y:69},{x:95,y:70},{x:95,y:71},{x:95,y:72},{x:96,y:72},{x:97,y:72},{x:97,y:73},{x:98,y:73},{x:99,y:73},{x:99,y:74},{x:99,y:75},{x:98,y:75},{x:98,y:76},{x:98,y:77},{x:97,y:77},{x:97,y:78},{x:96,y:78},{x:95,y:78},{x:95,y:79},{x:95,y:80},{x:94,y:80},{x:94,y:81},{x:94,y:82},{x:95,y:82},{x:95,y:83},{x:96,y:83},{x:97,y:83},{x:97,y:84},{x:97,y:85},{x:97,y:86},{x:96,y:86},{x:95,y:86},{x:95,y:85},{x:94,y:85},{x:94,y:84},{x:93,y:84},{x:93,y:83},{x:92,y:83},{x:91,y:83},{x:91,y:84},{x:91,y:85},{x:92,y:85},{x:92,y:86},{x:92,y:87},{x:91,y:87},{x:90,y:87},{x:89,y:87},{x:88,y:87},{x:88,y:88},{x:87,y:88},{x:86,y:88},{x:85,y:88},{x:84,y:88},{x:84,y:87},{x:83,y:87},{x:82,y:87},{x:82,y:88},{x:82,y:89},{x:82,y:90},{x:82,y:91},{x:83,y:91},{x:83,y:92},{x:84,y:92},{x:84,y:93},{x:84,y:94},{x:84,y:95},{x:84,y:96},{x:83,y:96},{x:82,y:96},{x:81,y:96},{x:80,y:96},{x:80,y:95},{x:80,y:94},{x:80,y:93},{x:80,y:92},{x:80,y:91},{x:80,y:90},{x:79,y:90},{x:79,y:89},{x:78,y:89},{x:77,y:89},{x:77,y:88},{x:76,y:88},{x:76,y:87},{x:76,y:86},{x:77,y:86},{x:77,y:85},{x:78,y:85},{x:78,y:84},{x:79,y:84},{x:80,y:84},{x:81,y:84},{x:81,y:83},{x:81,y:82},{x:80,y:82},{x:80,y:81},{x:79,y:81},{x:79,y:80},{x:79,y:79},{x:80,y:79},{x:80,y:78},{x:81,y:78},{x:82,y:78},{x:82,y:79},{x:83,y:79},{x:84,y:79},{x:84,y:80},{x:85,y:80},{x:86,y:80},{x:86,y:81},{x:86,y:82},{x:87,y:82},{x:88,y:82},{x:89,y:82},{x:89,y:81},{x:90,y:81},{x:91,y:81},{x:91,y:80},{x:92,y:80},{x:92,y:79},{x:93,y:79},{x:93,y:78},{x:93,y:77},{x:93,y:76},{x:94,y:76},{x:94,y:75},{x:94,y:74},{x:94,y:73},{x:93,y:73},{x:93,y:72},{x:92,y:72},{x:92,y:71},{x:92,y:70},{x:93,y:70},{x:93,y:69},{x:93,y:68},{x:92,y:68},{x:91,y:68},{x:90,y:68},{x:89,y:68},{x:89,y:67},{x:89,y:66},{x:88,y:66},{x:88,y:65},{x:88,y:64},{x:87,y:64},{x:86,y:64},{x:85,y:64},{x:85,y:65},{x:85,y:66},{x:85,y:67},{x:86,y:67},{x:87,y:67},{x:87,y:68},{x:87,y:69},{x:88,y:69},{x:88,y:70},{x:88,y:71},{x:88,y:72},{x:87,y:72},{x:86,y:72},{x:85,y:72},{x:84,y:72},{x:84,y:71},{x:84,y:70},{x:83,y:70},{x:82,y:70},{x:82,y:69},{x:81,y:69},{x:80,y:69},{x:80,y:70},{x:80,y:71},{x:79,y:71},{x:79,y:72},{x:79,y:73},{x:80,y:73},{x:81,y:73},{x:81,y:74},{x:81,y:75},{x:81,y:76},{x:80,y:76},{x:79,y:76},{x:79,y:75},{x:78,y:75},{x:77,y:75},{x:76,y:75},{x:76,y:76},{x:76,y:77},{x:76,y:78},{x:75,y:78},{x:75,y:79},{x:75,y:80},{x:76,y:80},{x:77,y:80},{x:77,y:81},{x:77,y:82},{x:76,y:82},{x:76,y:83},{x:76,y:84},{x:75,y:84},{x:75,y:85},{x:74,y:85},{x:73,y:85},{x:73,y:86},{x:73,y:87},{x:74,y:87},{x:74,y:88},{x:74,y:89},{x:75,y:89},{x:75,y:90},{x:75,y:91},{x:75,y:92},{x:76,y:92},{x:77,y:92},{x:77,y:93},{x:78,y:93},{x:78,y:94},{x:78,y:95},{x:78,y:96},{x:78,y:97},{x:77,y:97},{x:77,y:98},{x:77,y:99},{x:78,y:99},{x:79,y:99},{x:79,y:98},{x:80,y:98},{x:81,y:98},{x:81,y:99},{x:82,y:99},{x:83,y:99},{x:83,y:98},{x:84,y:98},{x:85,y:98},{x:86,y:98},{x:86,y:99},{x:87,y:99},{x:88,y:99},{x:89,y:99},{x:90,y:99},{x:90,y:98},{x:91,y:98},{x:91,y:97},{x:91,y:96},{x:92,y:96},{x:92,y:95},{x:92,y:94},{x:91,y:94},{x:91,y:93},{x:90,y:93},{x:90,y:92},{x:90,y:91},{x:89,y:91},{x:89,y:90},{x:89,y:89},{x:90,y:89},{x:91,y:89},{x:91,y:90},{x:92,y:90},{x:93,y:90},{x:93,y:91},{x:94,y:91},{x:94,y:92},{x:95,y:92},{x:96,y:92},{x:96,y:91},{x:96,y:90},{x:95,y:90},{x:95,y:89},{x:95,y:88},{x:96,y:88},{x:97,y:88},{x:97,y:89},{x:98,y:89},{x:98,y:90},{x:99,y:90},{x:99,y:91},{x:99,y:92},{x:98,y:92},{x:98,y:93},{x:98,y:94},{x:98,y:95},{x:99,y:95},{x:99,y:96},{x:99,y:97},{x:98,y:97},{x:97,y:97},{x:96,y:97},{x:96,y:98},{x:96,y:99},{x:97,y:99},{x:98,y:99},{x:99,y:99}],d={lineWidth:.6,strokeStyle:"rgba(0, 0, 0, 0.5)"},f={width:6,height:6},g={fillStyle:"rgba(255, 0, 0, 0.5)"},h={up:1,right:2,down:4,left:8},p=(y,x)=>()=>()=>x.clearRect(0,0,y.width,y.height),m=y=>x=>x.map(({x:x,y:n})=>()=>{y.fillStyle=g.fillStyle,y.fillRect(x*f.width,n*f.height,f.width,f.height)}),w=y=>(x,n)=>{y.width=f.width*x,y.height=f.height*n},v=(y,x)=>new Int32Array(y.map(({x:y,y:n})=>n*x+y)),b=(y,x)=>y.reduce((y,n,e)=>{const t=Math.floor(e/x);return y[t]||(y[t]=[]),y[t].push(n),y},[]),k=(y,x,n)=>{const a=t.a.new(y,x,n),r=new Uint8Array(e.o.buffer,a.cells(),y*x);return{maze:a,cells:r}},F=()=>{window.animationHandle&&(window.cancelAnimationFrame(animationHandle),window.animationHandle=void 0)},A=({mazeJSON:y,solutionJSON:x,solutionTestResult:n,drawInstructions:e,animateDrawInstructions:t,ui:{mazeDefinitionTextarea:a,solutionResultsDiv:r,solutionTextarea:o}})=>{F(),e.forEach(y=>y()),t&&z(t),a.value=y,o.value=x||"",n?(r.setAttribute("class","ok"===n?"solution-valid":"solution-invalid"),r.innerText="ok"===n?"Your solution works, well done!":n):r.setAttribute("class","no-solution")},z=({instructions:y,amtInstructionsPerTick:x=1})=>{F();const n=b(y,x),e=()=>{const y=n.shift();y?(y.forEach(y=>y()),window.animationHandle=window.requestAnimationFrame(e)):F()};e()},S=()=>{const y=["downloadMazeLink","mazeDefinitionTextarea","updateMazeButton","mazeCanvas","solutionTextarea","testSolutionButton","solutionResultsDiv","testMazeLink","generateMazeLink","generateSmallMazeLink"].reduce((y,x)=>({...y,[x]:document.getElementById(x)}),{}),x=(({mazeCanvas:y})=>{const x=y.getContext("2d",{alpha:!1});return{sizeCanvas:w(y),getClearMazeInstruction:p(y,x),getWallInstructions:(n=x,(y,x)=>{const{width:e,height:t}=f,{lineWidth:a,strokeStyle:r}=d,{up:o,right:i,down:s,left:l}=h;return x.reduce((x,u,c)=>{const d=c<y?0:Math.floor(c/y),f=(c-d*y)*e,g=d*t;return 0==(u&o)&&x.push(()=>{n.lineWidth=a,n.strokeStyle=r,n.beginPath(),n.moveTo(f,g),n.lineTo(f+e,g),n.stroke()}),0==(u&i)&&x.push(()=>{n.lineWidth=a,n.strokeStyle=r,n.beginPath(),n.moveTo(f+e,g),n.lineTo(f+e,g+t),n.stroke()}),0==(u&s)&&x.push(()=>{n.lineWidth=a,n.strokeStyle=r,n.beginPath(),n.moveTo(f,g+t),n.lineTo(f+e,g+t),n.stroke()}),0==(u&l)&&x.push(()=>{n.lineWidth=a,n.strokeStyle=r,n.beginPath(),n.moveTo(f,g),n.lineTo(f,g+t),n.stroke()}),x},[])}),getSolutionInstructions:m(x)};var n})(y);x.sizeCanvas(100,100);const{maze:n,cells:e}=k(100,100,u),t={maze:n,mazeJSON:null,cells:e,solution:null,solutionJSON:"",solutionTestResult:null,ui:y,drawing:x,numRows:100,numCols:100,drawInstructions:[x.getClearMazeInstruction(),...x.getWallInstructions(100,e)],animateDrawInstructions:null};A(t),y.updateMazeButton.addEventListener("click",()=>{t.drawInstructions=[],t.animateDrawInstructions=null;let x=null;try{x=JSON.parse(y.mazeDefinitionTextarea.value)}catch(y){return t.solutionTestResult="Invalid JSON submitted in maze definition, please check the format of your definition. "+y.message,void A(t)}const n=x.length,e=x[0].length,{cells:a,maze:r}=k(n,e,new Int8Array(x.flat()));t.cells=a,t.maze=r,t.numRows=n,t.numCols=e,t.mazeJSON=JSON.stringify(x,null,2),t.drawInstructions=[t.drawing.getClearMazeInstruction(),...t.drawing.getWallInstructions(t.numCols,t.cells)],A(t)}),y.testSolutionButton.addEventListener("click",()=>{let x;t.drawInstructions=[],t.animateDrawInstructions=null;try{x=JSON.parse(y.solutionTextarea.value)}catch(y){return t.solutionTestResult="Invalid JSON submitted, please check the format of your solution. "+y.message,void A(t)}t.solution=x,t.solutionJSON=JSON.stringify(x,null,2);const n=v(x,t.numCols);t.solutionTestResult=t.maze.check_solution(n)||"ok",t.drawInstructions=[t.drawing.getClearMazeInstruction(),...t.drawing.getWallInstructions(t.numCols,t.cells)],"ok"===t.solutionTestResult&&(t.animateDrawInstructions={instructions:t.drawing.getSolutionInstructions(t.solution),amtInstructionsPerTick:2}),A(t),t.drawInstructions=[],t.animateDrawInstructions=null}),y.testMazeLink.addEventListener("click",()=>{t.numRows=100,t.numCols=100,t.drawing.sizeCanvas(t.numCols,t.numRows);const{cells:y,maze:x}=k(t.numRows,t.numCols,u);t.cells=y,t.maze=x,t.solution=c,t.solutionJSON=JSON.stringify(c,null,2),t.mazeJSON=null,t.animateDrawInstructions=null,t.solutionTestResult=t.maze.check_solution(v(c,t.numCols))||"ok",t.drawInstructions=[t.drawing.getClearMazeInstruction(),...t.drawing.getWallInstructions(t.numCols,t.cells)],"ok"===t.solutionTestResult&&(t.animateDrawInstructions={instructions:t.drawing.getSolutionInstructions(t.solution),amtInstructionsPerTick:2}),A(t),t.drawInstructions=[],t.animateDrawInstructions=null}),y.generateMazeLink.addEventListener("click",()=>{t.numRows=100,t.numCols=100,t.drawing.sizeCanvas(t.numCols,t.numRows);const{cells:y,maze:x}=k(t.numRows,t.numCols);t.cells=y,t.maze=x,t.solution=null,t.solutionJSON=null,t.solutionTestResult=null,t.mazeJSON=null,t.drawInstructions=[t.drawing.getClearMazeInstruction(),...t.drawing.getWallInstructions(t.numCols,t.cells)],t.animateDrawInstructions=null,A(t),t.drawInstructions=[]}),y.generateSmallMazeLink.addEventListener("click",()=>{t.numRows=10,t.numCols=10,t.drawing.sizeCanvas(t.numCols,t.numRows);const{cells:y,maze:x}=k(t.numRows,t.numCols);t.cells=y,t.maze=x,t.solution=null,t.solutionJSON=null,t.solutionTestResult=null,t.mazeJSON=null,t.drawInstructions=[t.drawing.getClearMazeInstruction(),...t.drawing.getWallInstructions(t.numCols,t.cells)],t.animateDrawInstructions=null,A(t),t.drawInstructions=[]}),y.downloadMazeLink.addEventListener("click",()=>{const x=JSON.stringify(b(t.cells,t.numCols),null,2);y.downloadMazeLink.setAttribute("href","data:application/json;charset=utf-8,"+encodeURIComponent(x))})}},function(y,x,n){"use strict";(function(y){n.d(x,"a",(function(){return f})),n.d(x,"c",(function(){return g})),n.d(x,"b",(function(){return h})),n.d(x,"d",(function(){return p}));var e=n(5);let t=new("undefined"==typeof TextDecoder?(0,y.require)("util").TextDecoder:TextDecoder)("utf-8",{ignoreBOM:!0,fatal:!0});t.decode();let a=null;function r(){return null!==a&&a.buffer===e.o.buffer||(a=new Uint8Array(e.o.buffer)),a}function o(y,x){return t.decode(r().subarray(y,y+x))}let i=0;let s=null;function l(y,x){const n=x(4*y.length);return(null!==s&&s.buffer===e.o.buffer||(s=new Uint32Array(e.o.buffer)),s).set(y,n/4),i=y.length,n}let u=null;function c(){return null!==u&&u.buffer===e.o.buffer||(u=new Int32Array(e.o.buffer)),u}function d(y){return()=>{throw new Error(y+" is not defined")}}class f{static __wrap(y){const x=Object.create(f.prototype);return x.ptr=y,x}__destroy_into_raw(){const y=this.ptr;return this.ptr=0,y}free(){const y=this.__destroy_into_raw();e.g(y)}cells(){return e.p(this.ptr)}static new(y,x,n){var t=null==n?0:function(y,x){const n=x(1*y.length);return r().set(y,n/1),i=y.length,n}(n,e.n),a=i;const o=e.r(y,x,t,a);return f.__wrap(o)}check_solution(y){try{const t=e.l(-16),a=l(y,e.n),r=i;e.q(t,this.ptr,a,r);var x=c()[t/4+0],n=c()[t/4+1];let s;return 0!==x&&(s=o(x,n).slice(),e.m(x,1*n)),s}finally{e.l(16)}}}const g="function"==typeof Math.random?Math.random:d("Math.random"),h="function"==typeof Math.floor?Math.floor:d("Math.floor");function p(y,x){throw new Error(o(y,x))}}).call(this,n(10)(y))},function(y,x,n){"use strict";var e,t=function(){return void 0===e&&(e=Boolean(window&&document&&document.all&&!window.atob)),e},a=function(){var y={};return function(x){if(void 0===y[x]){var n=document.querySelector(x);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(y){n=null}y[x]=n}return y[x]}}(),r=[];function o(y){for(var x=-1,n=0;n<r.length;n++)if(r[n].identifier===y){x=n;break}return x}function i(y,x){for(var n={},e=[],t=0;t<y.length;t++){var a=y[t],i=x.base?a[0]+x.base:a[0],s=n[i]||0,l="".concat(i," ").concat(s);n[i]=s+1;var u=o(l),c={css:a[1],media:a[2],sourceMap:a[3]};-1!==u?(r[u].references++,r[u].updater(c)):r.push({identifier:l,updater:h(c,x),references:1}),e.push(l)}return e}function s(y){var x=document.createElement("style"),e=y.attributes||{};if(void 0===e.nonce){var t=n.nc;t&&(e.nonce=t)}if(Object.keys(e).forEach((function(y){x.setAttribute(y,e[y])})),"function"==typeof y.insert)y.insert(x);else{var r=a(y.insert||"head");if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(x)}return x}var l,u=(l=[],function(y,x){return l[y]=x,l.filter(Boolean).join("\n")});function c(y,x,n,e){var t=n?"":e.media?"@media ".concat(e.media," {").concat(e.css,"}"):e.css;if(y.styleSheet)y.styleSheet.cssText=u(x,t);else{var a=document.createTextNode(t),r=y.childNodes;r[x]&&y.removeChild(r[x]),r.length?y.insertBefore(a,r[x]):y.appendChild(a)}}function d(y,x,n){var e=n.css,t=n.media,a=n.sourceMap;if(t?y.setAttribute("media",t):y.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),y.styleSheet)y.styleSheet.cssText=e;else{for(;y.firstChild;)y.removeChild(y.firstChild);y.appendChild(document.createTextNode(e))}}var f=null,g=0;function h(y,x){var n,e,t;if(x.singleton){var a=g++;n=f||(f=s(x)),e=c.bind(null,n,a,!1),t=c.bind(null,n,a,!0)}else n=s(x),e=d.bind(null,n,x),t=function(){!function(y){if(null===y.parentNode)return!1;y.parentNode.removeChild(y)}(n)};return e(y),function(x){if(x){if(x.css===y.css&&x.media===y.media&&x.sourceMap===y.sourceMap)return;e(y=x)}else t()}}y.exports=function(y,x){(x=x||{}).singleton||"boolean"==typeof x.singleton||(x.singleton=t());var n=i(y=y||[],x);return function(y){if(y=y||[],"[object Array]"===Object.prototype.toString.call(y)){for(var e=0;e<n.length;e++){var t=o(n[e]);r[t].references--}for(var a=i(y,x),s=0;s<n.length;s++){var l=o(n[s]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}n=a}}}},function(y,x,n){"use strict";y.exports=function(y){var x=[];return x.toString=function(){return this.map((function(x){var n=y(x);return x[2]?"@media ".concat(x[2]," {").concat(n,"}"):n})).join("")},x.i=function(y,n,e){"string"==typeof y&&(y=[[null,y,""]]);var t={};if(e)for(var a=0;a<this.length;a++){var r=this[a][0];null!=r&&(t[r]=!0)}for(var o=0;o<y.length;o++){var i=[].concat(y[o]);e&&t[i[0]]||(n&&(i[2]?i[2]="".concat(n," and ").concat(i[2]):i[2]=n),x.push(i))}},x}},function(y,x,n){"use strict";var e=n.w[y.i];y.exports=e;n(2);e.s()},function(y,x,n){"use strict";var e=n(4),t=n.n(e)()((function(y){return y[1]}));t.push([y.i,"body {\n  font-family: sans-serif;\n}\ntextarea {\n  width: 100%;\n  height: 140px;\n}\n.flex-grid {\n  display: flex;\n  justify-content: space-between;\n}\n.flex-grid .col {\n  width: 48%;\n}\n@media (max-width: 1050px) {\n  .flex-grid {\n    display: block;\n  }\n  .flex-grid .col {\n    width: 100%;\n  }\n}\n.test-instructions {\n  padding: 10px;\n  background-color: #9fbaff;\n}\n.no-solution {\n  display: none;\n}\n.solution-invalid {\n  display: block;\n  padding: 0.5em;\n  margin: 0.5em 0 0.5em 0;\n  border: thin darkred dashed;\n  color: darkred;\n}\n.solution-valid {\n  display: block;\n  padding: 0.5em;\n  margin: 0.5em 0 0.5em 0;\n  border: thin green dashed;\n  color: green;\n}\n",""]),x.a=t},function(y,x,n){"use strict";var e=n(4),t=n.n(e)()((function(y){return y[1]}));t.push([y.i,'/* PrismJS 1.23.0\nhttps://prismjs.com/download.html#themes=prism-okaidia&languages=clike+javascript */\n/**\n * okaidia theme for JavaScript, CSS and HTML\n * Loosely based on Monokai textmate theme by http://www.monokai.nl/\n * @author ocodia\n */\n\ncode[class*="language-"],\npre[class*="language-"] {\n  color: #f8f8f2;\n  background: none;\n  text-shadow: 0 1px rgba(0, 0, 0, 0.3);\n  font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace;\n  font-size: 1em;\n  text-align: left;\n  white-space: pre;\n  word-spacing: normal;\n  word-break: normal;\n  word-wrap: normal;\n  line-height: 1.5;\n\n  -moz-tab-size: 4;\n  -o-tab-size: 4;\n  tab-size: 4;\n\n  -webkit-hyphens: none;\n  -moz-hyphens: none;\n  -ms-hyphens: none;\n  hyphens: none;\n}\n\n/* Code blocks */\npre[class*="language-"] {\n  padding: 1em;\n  margin: 0.5em 0;\n  overflow: auto;\n  border-radius: 0.3em;\n}\n\n:not(pre) > code[class*="language-"],\npre[class*="language-"] {\n  background: #272822;\n}\n\n/* Inline code */\n:not(pre) > code[class*="language-"] {\n  padding: 0.1em;\n  border-radius: 0.3em;\n  white-space: normal;\n}\n\n.token.comment,\n.token.prolog,\n.token.doctype,\n.token.cdata {\n  color: #8292a2;\n}\n\n.token.punctuation {\n  color: #f8f8f2;\n}\n\n.token.namespace {\n  opacity: 0.7;\n}\n\n.token.property,\n.token.tag,\n.token.constant,\n.token.symbol,\n.token.deleted {\n  color: #f92672;\n}\n\n.token.boolean,\n.token.number {\n  color: #ae81ff;\n}\n\n.token.selector,\n.token.attr-name,\n.token.string,\n.token.char,\n.token.builtin,\n.token.inserted {\n  color: #a6e22e;\n}\n\n.token.operator,\n.token.entity,\n.token.url,\n.language-css .token.string,\n.style .token.string,\n.token.variable {\n  color: #f8f8f2;\n}\n\n.token.atrule,\n.token.attr-value,\n.token.function,\n.token.class-name {\n  color: #e6db74;\n}\n\n.token.keyword {\n  color: #66d9ef;\n}\n\n.token.regex,\n.token.important {\n  color: #fd971f;\n}\n\n.token.important,\n.token.bold {\n  font-weight: bold;\n}\n.token.italic {\n  font-style: italic;\n}\n\n.token.entity {\n  cursor: help;\n}\n',""]),x.a=t},function(y,x,n){(function(x){var n=function(y){var x=/\blang(?:uage)?-([\w-]+)\b/i,n=0,e={manual:y.Prism&&y.Prism.manual,disableWorkerMessageHandler:y.Prism&&y.Prism.disableWorkerMessageHandler,util:{encode:function y(x){return x instanceof t?new t(x.type,y(x.content),x.alias):Array.isArray(x)?x.map(y):x.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(y){return Object.prototype.toString.call(y).slice(8,-1)},objId:function(y){return y.__id||Object.defineProperty(y,"__id",{value:++n}),y.__id},clone:function y(x,n){var t,a;switch(n=n||{},e.util.type(x)){case"Object":if(a=e.util.objId(x),n[a])return n[a];for(var r in t={},n[a]=t,x)x.hasOwnProperty(r)&&(t[r]=y(x[r],n));return t;case"Array":return a=e.util.objId(x),n[a]?n[a]:(t=[],n[a]=t,x.forEach((function(x,e){t[e]=y(x,n)})),t);default:return x}},getLanguage:function(y){for(;y&&!x.test(y.className);)y=y.parentElement;return y?(y.className.match(x)||[,"none"])[1].toLowerCase():"none"},currentScript:function(){if("undefined"==typeof document)return null;if("currentScript"in document)return document.currentScript;try{throw new Error}catch(e){var y=(/at [^(\r\n]*\((.*):.+:.+\)$/i.exec(e.stack)||[])[1];if(y){var x=document.getElementsByTagName("script");for(var n in x)if(x[n].src==y)return x[n]}return null}},isActive:function(y,x,n){for(var e="no-"+x;y;){var t=y.classList;if(t.contains(x))return!0;if(t.contains(e))return!1;y=y.parentElement}return!!n}},languages:{extend:function(y,x){var n=e.util.clone(e.languages[y]);for(var t in x)n[t]=x[t];return n},insertBefore:function(y,x,n,t){var a=(t=t||e.languages)[y],r={};for(var o in a)if(a.hasOwnProperty(o)){if(o==x)for(var i in n)n.hasOwnProperty(i)&&(r[i]=n[i]);n.hasOwnProperty(o)||(r[o]=a[o])}var s=t[y];return t[y]=r,e.languages.DFS(e.languages,(function(x,n){n===s&&x!=y&&(this[x]=r)})),r},DFS:function y(x,n,t,a){a=a||{};var r=e.util.objId;for(var o in x)if(x.hasOwnProperty(o)){n.call(x,o,x[o],t||o);var i=x[o],s=e.util.type(i);"Object"!==s||a[r(i)]?"Array"!==s||a[r(i)]||(a[r(i)]=!0,y(i,n,o,a)):(a[r(i)]=!0,y(i,n,null,a))}}},plugins:{},highlightAll:function(y,x){e.highlightAllUnder(document,y,x)},highlightAllUnder:function(y,x,n){var t={callback:n,container:y,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};e.hooks.run("before-highlightall",t),t.elements=Array.prototype.slice.apply(t.container.querySelectorAll(t.selector)),e.hooks.run("before-all-elements-highlight",t);for(var a,r=0;a=t.elements[r++];)e.highlightElement(a,!0===x,t.callback)},highlightElement:function(n,t,a){var r=e.util.getLanguage(n),o=e.languages[r];n.className=n.className.replace(x,"").replace(/\s+/g," ")+" language-"+r;var i=n.parentElement;i&&"pre"===i.nodeName.toLowerCase()&&(i.className=i.className.replace(x,"").replace(/\s+/g," ")+" language-"+r);var s={element:n,language:r,grammar:o,code:n.textContent};function l(y){s.highlightedCode=y,e.hooks.run("before-insert",s),s.element.innerHTML=s.highlightedCode,e.hooks.run("after-highlight",s),e.hooks.run("complete",s),a&&a.call(s.element)}if(e.hooks.run("before-sanity-check",s),!s.code)return e.hooks.run("complete",s),void(a&&a.call(s.element));if(e.hooks.run("before-highlight",s),s.grammar)if(t&&y.Worker){var u=new Worker(e.filename);u.onmessage=function(y){l(y.data)},u.postMessage(JSON.stringify({language:s.language,code:s.code,immediateClose:!0}))}else l(e.highlight(s.code,s.grammar,s.language));else l(e.util.encode(s.code))},highlight:function(y,x,n){var a={code:y,grammar:x,language:n};return e.hooks.run("before-tokenize",a),a.tokens=e.tokenize(a.code,a.grammar),e.hooks.run("after-tokenize",a),t.stringify(e.util.encode(a.tokens),a.language)},tokenize:function(y,x){var n=x.rest;if(n){for(var s in n)x[s]=n[s];delete x.rest}var l=new r;return o(l,l.head,y),function y(x,n,r,s,l,u){for(var c in r)if(r.hasOwnProperty(c)&&r[c]){var d=r[c];d=Array.isArray(d)?d:[d];for(var f=0;f<d.length;++f){if(u&&u.cause==c+","+f)return;var g=d[f],h=g.inside,p=!!g.lookbehind,m=!!g.greedy,w=g.alias;if(m&&!g.pattern.global){var v=g.pattern.toString().match(/[imsuy]*$/)[0];g.pattern=RegExp(g.pattern.source,v+"g")}for(var b=g.pattern||g,k=s.next,F=l;k!==n.tail&&!(u&&F>=u.reach);F+=k.value.length,k=k.next){var A=k.value;if(n.length>x.length)return;if(!(A instanceof t)){var z,S=1;if(m){if(!(z=a(b,F,x,p)))break;var I=z.index,C=z.index+z[0].length,M=F;for(M+=k.value.length;M<=I;)M+=(k=k.next).value.length;if(F=M-=k.value.length,k.value instanceof t)continue;for(var O=k;O!==n.tail&&(M<C||"string"==typeof O.value);O=O.next)S++,M+=O.value.length;S--,A=x.slice(F,M),z.index-=F}else if(!(z=a(b,0,A,p)))continue;I=z.index;var T=z[0],N=A.slice(0,I),j=A.slice(I+T.length),_=F+A.length;u&&_>u.reach&&(u.reach=_);var $=k.prev;if(N&&($=o(n,$,N),F+=N.length),i(n,$,S),k=o(n,$,new t(c,h?e.tokenize(T,h):T,w,T)),j&&o(n,k,j),1<S){var E={cause:c+","+f,reach:_};y(x,n,r,k.prev,F,E),u&&E.reach>u.reach&&(u.reach=E.reach)}}}}}}(y,l,x,l.head,0),function(y){for(var x=[],n=y.head.next;n!==y.tail;)x.push(n.value),n=n.next;return x}(l)},hooks:{all:{},add:function(y,x){var n=e.hooks.all;n[y]=n[y]||[],n[y].push(x)},run:function(y,x){var n=e.hooks.all[y];if(n&&n.length)for(var t,a=0;t=n[a++];)t(x)}},Token:t};function t(y,x,n,e){this.type=y,this.content=x,this.alias=n,this.length=0|(e||"").length}function a(y,x,n,e){y.lastIndex=x;var t=y.exec(n);if(t&&e&&t[1]){var a=t[1].length;t.index+=a,t[0]=t[0].slice(a)}return t}function r(){var y={value:null,prev:null,next:null},x={value:null,prev:y,next:null};y.next=x,this.head=y,this.tail=x,this.length=0}function o(y,x,n){var e=x.next,t={value:n,prev:x,next:e};return x.next=t,e.prev=t,y.length++,t}function i(y,x,n){for(var e=x.next,t=0;t<n&&e!==y.tail;t++)e=e.next;(x.next=e).prev=x,y.length-=t}if(y.Prism=e,t.stringify=function y(x,n){if("string"==typeof x)return x;if(Array.isArray(x)){var t="";return x.forEach((function(x){t+=y(x,n)})),t}var a={type:x.type,content:y(x.content,n),tag:"span",classes:["token",x.type],attributes:{},language:n},r=x.alias;r&&(Array.isArray(r)?Array.prototype.push.apply(a.classes,r):a.classes.push(r)),e.hooks.run("wrap",a);var o="";for(var i in a.attributes)o+=" "+i+'="'+(a.attributes[i]||"").replace(/"/g,"&quot;")+'"';return"<"+a.tag+' class="'+a.classes.join(" ")+'"'+o+">"+a.content+"</"+a.tag+">"},!y.document)return y.addEventListener&&(e.disableWorkerMessageHandler||y.addEventListener("message",(function(x){var n=JSON.parse(x.data),t=n.language,a=n.code,r=n.immediateClose;y.postMessage(e.highlight(a,e.languages[t],t)),r&&y.close()}),!1)),e;var s=e.util.currentScript();function l(){e.manual||e.highlightAll()}if(s&&(e.filename=s.src,s.hasAttribute("data-manual")&&(e.manual=!0)),!e.manual){var u=document.readyState;"loading"===u||"interactive"===u&&s&&s.defer?document.addEventListener("DOMContentLoaded",l):window.requestAnimationFrame?window.requestAnimationFrame(l):window.setTimeout(l,16)}return e}("undefined"!=typeof window?window:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{});y.exports&&(y.exports=n),void 0!==x&&(x.Prism=n),n.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|interface|extends|implements|trait|instanceof|new)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,boolean:/\b(?:true|false)\b/,function:/\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},n.languages.javascript=n.languages.extend("clike",{"class-name":[n.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:prototype|constructor))/,lookbehind:!0}],keyword:[{pattern:/((?:^|})\s*)(?:catch|finally)\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\s*[\[$\w\xA0-\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:/\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/,operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),n.languages.javascript["class-name"][0].pattern=/(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/,n.languages.insertBefore("javascript","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:n.languages.regex},"regex-flags":/[a-z]+$/,"regex-delimiter":/^\/|\/$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:n.languages.javascript},{pattern:/(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,inside:n.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:n.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:n.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),n.languages.insertBefore("javascript","string",{"template-string":{pattern:/`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\${)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\${|}$/,alias:"punctuation"},rest:n.languages.javascript}},string:/[\s\S]+/}}}),n.languages.markup&&n.languages.markup.tag.addInlined("script","javascript"),n.languages.js=n.languages.javascript}).call(this,n(9))},function(y,x){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(y){"object"==typeof window&&(n=window)}y.exports=n},function(y,x){y.exports=function(y){if(!y.webpackPolyfill){var x=Object.create(y);x.children||(x.children=[]),Object.defineProperty(x,"loaded",{enumerable:!0,get:function(){return x.l}}),Object.defineProperty(x,"id",{enumerable:!0,get:function(){return x.i}}),Object.defineProperty(x,"exports",{enumerable:!0}),x.webpackPolyfill=1}return x}}]]);